{"version":3,"file":"static/js/280.fb54f0cf.chunk.js","mappings":"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","sources":["pages/auth/login.component.jsx","pages/auth/register.component.jsx","pages/auth/auth.jsx","pages/authenticate.jsx"],"sourcesContent":["import { Fragment, createRef, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { userService } from '../../services/users.service';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { openSnackBar } from '../../redux/snackBarReducer';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope, faLock, faCheckDouble, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { logUserIn, selectRegistering, selectLoggedIn } from '../../redux/authReducer';\r\n\r\nconst LoginComponent = ({switchRegister, role}) => {\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  \r\n  const location = useLocation();\r\n  const { from } = location.state || { from: { pathname: \"/\" } };\r\n  \r\n  const isLoggedIn = useSelector(selectLoggedIn);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [emailIssue, setEmailIssue] = useState(false);\r\n  const [password, setPassword] = useState('');\r\n  const [passwordIssue, setPasswordIssue] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      navigate('/');\r\n    }\r\n  }, [isLoggedIn])\r\n\r\n  useEffect(() => {\r\n    setEmail('');\r\n    setPassword('');\r\n  }, [])\r\n\r\n  const checkGroupValidation = (index) => {\r\n    const ret = {message: \"\", status: false};\r\n\r\n    switch (index) {\r\n      case 0:\r\n        if (email.length === 0) {ret.message = \"Please input email\"; ret.status = false; setEmailIssue(true)}\r\n        else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {ret.message = \"Invalid Email!\"; ret.status = false; setEmailIssue(true)}\r\n        else if (password.length === 0) {ret.message = \"Please input password\"; ret.status = false; setPasswordIssue(true)}\r\n        else { ret.message = \"\"; ret.status = true;}\r\n        break;\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  const loginProc = async () => {\r\n    \r\n    const checking = checkGroupValidation(0);\r\n    if (!checking.status) {\r\n      dispatch(openSnackBar({ message: checking.message, status: 'error' }));  \r\n      return;\r\n    }\r\n\r\n    dispatch(logUserIn(email, password, role, from.pathname));\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full px-[3rem] text-xl\">\r\n      <div className=\"flex flex-col my-[1rem] mb-[3rem] mt-[2rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-2\">\r\n          Email:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"email\"\r\n            value={email}\r\n            onChange={e => {setEmail(e.target.value); setEmailIssue(false)}} />\r\n        <p className={`${emailIssue ? 'text-red-400':'text-[#404040]'} text-sm select-none`}>Email Address is not recognised. Please check again or register.</p>\r\n      </div>\r\n      <div className=\"flex flex-col my-[1rem] mb-[3rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-2\">\r\n          Password:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => {setPassword(e.target.value); setPasswordIssue(false)}} />\r\n        <p className={`${passwordIssue ? 'text-red-400':'text-[#404040]'} text-sm select-none`}>Password incorrect/not found. Please check and try again.</p>\r\n      </div>\r\n      <div className='flex justify-between'>\r\n          <button \r\n              className={`w-[8rem] text-xl text-gray-100 text-left underline decoration-1 leading-[2.6rem]`}\r\n              onClick={() => switchRegister()}\r\n              \r\n          >Register</button>\r\n          <button \r\n              className={`w-[8rem] text-xl leading-[2.6rem] rounded-[0.6rem] bg-[#D9D9D9] text-gray-800`}\r\n              onClick={() => loginProc()}\r\n          >Login</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginComponent;","import { Fragment, createRef, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { userService } from '../../services/users.service';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { openSnackBar } from '../../redux/snackBarReducer';\r\nimport PasswordStrengthBar from 'react-password-strength-bar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelope, faLock, faCheckDouble, faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { registerUser, selectRegistering, selectRegisterSuccess } from '../../redux/authReducer';\r\nimport Select from 'react-select';\r\nimport { NATIONALITIES }  from '../../config/constants';\r\n\r\nconst RegisterComponent = ({switchLogin, role, currentGroup, setCurrentGroup}) => {\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const registering = useSelector(selectRegistering);\r\n  const successRegistered = useSelector(selectRegisterSuccess);\r\n  const [regproc, setRegproc] = useState(false);\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [repassword, setRepassword] = useState('');\r\n  const [businessname, setBusinessname] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [postcode, setPostcode] = useState('');\r\n  const [telephone, setTelephone] = useState('');\r\n  const [notes, setNotes] = useState('');\r\n  const [userproxy, setUserProxy] = useState([]);\r\n  const [username, setUsername] = useState([]);\r\n  const [userpin, setUserpin] = useState([]);\r\n  const [emailIssue, setEmailIssue] = useState(false);\r\n  const [passwordIssue, setPasswordIssue] = useState(false);\r\n  const [repasswordIssue, setRepasswordIssue] = useState(false);\r\n  const [businessIssue, setBusinessIssue] = useState(false);\r\n  const [addressIssue, setAddressIssue] = useState(false);\r\n  const [postcodeIssue, setPostcodeIssue] = useState(false);\r\n  const [telephoneIssue, setTelephoneIssue] = useState(false);\r\n  const [notesIssue, setNotesIssue] = useState(false);\r\n  const [usernameIssue, setUsernameIssue] = useState(false);\r\n  const [pinIssue, setPinIssue] = useState(false);\r\n  \r\n  const form_groups = role === 'merchant' ? [\r\n    <div key={1} className='w-full h-full'>\r\n      <div className=\"flex flex-col mb-[0.5rem] mt-[1rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Email:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"email\"\r\n            value={email}\r\n            onChange={e => {setEmail(e.target.value); setEmailIssue(false)}} />\r\n        <p className={`${emailIssue ? 'text-red-400':'text-[#404040]'} text-sm select-none`}>Email format incorrect. Please check and try again.</p>\r\n      </div>\r\n      <div className=\"flex flex-col mb-[0.5rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Password:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => {setPassword(e.target.value); setPasswordIssue(false)}} />\r\n        <p className={`${passwordIssue ? 'text-red-400':'text-[#404040]'} text-sm select-none`}>{'Password must be alphanumeric, > 8 characters and contain one symbol.'}</p>\r\n      </div>\r\n      <div className=\"flex flex-col mb-[0.5rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Confirm Password:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"password\"\r\n            value={repassword}\r\n            onChange={e => {setRepassword(e.target.value); setRepasswordIssue(false)}} />\r\n        <p className={`${repasswordIssue ? 'text-red-400':'text-[#404040]'} text-sm select-none`}>Passwords do not match</p>\r\n      </div>\r\n    </div>,\r\n    <div key={2} className='w-full h-full'>\r\n      <div className=\"flex flex-col mb-[0.5rem] mt-[1rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Business Name:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"text\"\r\n            value={businessname}\r\n            onChange={e => {setBusinessname(e.target.value); setBusinessIssue(false)}} />\r\n        <p className={`${businessIssue ? 'text-red-400':'text-[#404040]'} text-sm select-none`}>{'Business Name must be >2 characters'}</p>\r\n      </div>\r\n      <div className=\"flex flex-col mb-[0.5rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Address:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"text\"\r\n            value={address}\r\n            onChange={e => {setAddress(e.target.value); setAddressIssue(false)}} />\r\n        <p className={`${addressIssue ? 'text-red-400':'text-[#404040]'} text-sm select-none`}>Address must not be empty</p>\r\n      </div>\r\n      <div className=\"flex flex-col mb-[0.5rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Postcode:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"text\"\r\n            value={postcode}\r\n            onChange={e => {setPostcode(e.target.value); setPostcodeIssue(false)}} />\r\n        <p className={`${postcodeIssue ? 'text-red-400':'text-[#404040]'} text-sm select-none`}>Postcode must not be empty</p>\r\n      </div>\r\n    </div>,\r\n    // <div key={3} className='w-full h-full'>\r\n    //   <div className='text-2xl font-bold mt-4 text-gray-100'>Add Users?</div>\r\n    //   <div className='w-full h-[13rem] overflow-y-auto'>\r\n    //     {\r\n    //       userproxy.map((up, index) => {\r\n    //         return (\r\n    //           <div key={index}>\r\n    //             <div className=\"flex flex-row items-center\">\r\n    //               <div className=\"flex flex-col mb-[0.5rem] mt-[1rem] w-[55%]\">\r\n    //                 <div className=\"flex flex-row items-center\">\r\n    //                   <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n    //                     Name:\r\n    //                   </label>\r\n    //                   <div \r\n    //                       className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n    //                   >{up.username}</div>\r\n    //                 </div>\r\n    //               </div>\r\n    //               <div className=\"flex flex-col mb-[0.5rem] mt-[1rem] w-[40%]\">\r\n    //                 <div className=\"flex flex-row items-center\">\r\n    //                   <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n    //                     PIN:\r\n    //                   </label>\r\n    //                   <div \r\n    //                       className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n    //                   >{up.userpin}</div>\r\n    //                 </div>\r\n    //               </div>\r\n    //             </div>\r\n    //           </div>\r\n    //         )\r\n    //       })\r\n    //     }\r\n    //     <div className=\"flex flex-row items-center\">\r\n    //       <div className=\"flex flex-col mb-[0.5rem] mt-[1rem] w-[55%]\">\r\n    //         <div className=\"flex flex-row items-center\">\r\n    //           <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n    //             Name:\r\n    //           </label>\r\n    //           <input \r\n    //               className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n    //               type=\"text\"\r\n    //               value={username}\r\n    //               onChange={e => {setUsername(e.target.value); setUsernameIssue(false)}} />\r\n    //         </div>\r\n    //         <p className={`${usernameIssue ? 'text-red-400':'text-[#404040]'} text-sm select-none`}>{'Name must be >2 characters'}</p>\r\n    //       </div>\r\n    //       <div className=\"flex flex-col mb-[0.5rem] mt-[1rem] w-[40%]\">\r\n    //         <div className=\"flex flex-row items-center\">\r\n    //           <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n    //             PIN:\r\n    //           </label>\r\n    //           <input \r\n    //               className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n    //               type=\"text\"\r\n    //               value={userpin}\r\n    //               onChange={e => {setUserpin(e.target.value); setPinIssue(false)}} />\r\n    //         </div>\r\n    //         <p className={`${pinIssue ? 'text-red-400':'text-[#404040]'} text-sm select-none`}>PIN should be 4 digits</p>\r\n    //       </div>\r\n    //       <div className=\"flex flex-col mb-[0.5rem] mt-[1rem] w-[5%]\">\r\n    //         <button \r\n    //             className={`w-[2rem] h-[2rem] text-xl rounded-[0.6rem] leading-[2rem] bg-[#D9D9D9] text-gray-800`}    \r\n    //             onClick={() => addUserProxy()}        \r\n    //         >+</button>\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n    //   <div className='text-xl text-gray-100 mt-[3rem]'>Click next if no other users needed</div>\r\n    // </div>\r\n  ] : [\r\n    <div key={1} className='w-full h-full'>\r\n      <div className=\"flex flex-col mb-[0.5rem] mt-[1rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Email:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"email\"\r\n            value={email}\r\n            onChange={e => {setEmail(e.target.value); setEmailIssue(false)}} />\r\n        <p className={`${emailIssue ? 'text-red-400':'text-[#404040]'} text-sm select-none`}>Email format incorrect. Please check and try again.</p>\r\n      </div>\r\n      <div className=\"flex flex-col mb-[0.5rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Password:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"password\"\r\n            value={password}\r\n            onChange={e => {setPassword(e.target.value); setPasswordIssue(false)}} />\r\n        <p className={`${passwordIssue ? 'text-red-400':'text-[#404040]'} text-sm select-none`}>{'Password must be alphanumeric, > 8 characters and contain one symbol.'}</p>\r\n      </div>\r\n      <div className=\"flex flex-col mb-[0.5rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Confirm Password:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"password\"\r\n            value={repassword}\r\n            onChange={e => {setRepassword(e.target.value); setRepasswordIssue(false)}} />\r\n        <p className={`${repasswordIssue ? 'text-red-400':'text-[#404040]'} text-sm select-none`}>Passwords do not match</p>\r\n      </div>\r\n    </div>,\r\n    <div key={2} className='w-full h-full'>\r\n      <div className=\"flex flex-col mb-[0.5rem] mt-[1rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Username:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"text\"\r\n            value={businessname}\r\n            onChange={e => {setBusinessname(e.target.value); setBusinessIssue(false)}} />\r\n        <p className={`${businessIssue ? 'text-red-400':'text-[#404040]'} text-sm select-none`}>{'Username must be >2 characters'}</p>\r\n      </div>\r\n      <div className=\"flex flex-col mb-[0.5rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Address:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"text\"\r\n            value={address}\r\n            onChange={e => {setAddress(e.target.value); setAddressIssue(false)}} />\r\n        <p className={`${addressIssue ? 'text-red-400':'text-[#404040]'} text-sm select-none`}>Address must not be empty</p>\r\n      </div>\r\n      <div className=\"flex flex-col mb-[0.5rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Postcode:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"text\"\r\n            value={postcode}\r\n            onChange={e => {setPostcode(e.target.value); setPostcodeIssue(false)}} />\r\n        <p className={`${postcodeIssue ? 'text-red-400':'text-[#404040]'} text-sm select-none`}>Postcode must not be empty</p>\r\n      </div>\r\n    </div>,\r\n    <div key={3} className='w-full h-full'>\r\n      <div className=\"flex flex-col mb-[0.5rem] mt-[1rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Telephone:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"text\"\r\n            value={telephone}\r\n            onChange={e => {setTelephone(e.target.value); setTelephoneIssue(false)}} />\r\n        <p className={`${telephoneIssue ? 'text-red-400':'text-[#404040]'} text-sm select-none`}>Telephone must not be empty</p>\r\n      </div>\r\n      <div className=\"flex flex-col mb-[6.6rem]\">\r\n        <label className=\"block uppercase tracking-wide text-gray-100 mb-1\">\r\n          Notes:\r\n        </label>\r\n        <input \r\n            className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n            type=\"text\"\r\n            value={notes}\r\n            onChange={e => {setNotes(e.target.value); setNotesIssue(false)}} />\r\n        <p className={`${notesIssue ? 'text-red-400':'text-[#404040]'} text-sm select-none`}>Notes must not be empty</p>\r\n      </div>\r\n    </div>\r\n  ];\r\n\r\n  const refs = form_groups.reduce((acc, val, i) => {\r\n    acc[i] = createRef();\r\n    return acc;\r\n  }, {});\r\n\r\n  const totalGroups = form_groups.length;\r\n  const scrollToGroup = i => {\r\n    setCurrentGroup(i);\r\n    refs[i].current.scrollIntoView({\r\n      behavior: 'smooth',\r\n      block: 'nearest',\r\n      inline: 'start',\r\n    });\r\n  };\r\n  const nextGroup = () => {\r\n    if (currentGroup >= totalGroups - 1) {\r\n      //scrollToGroup(0);\r\n      return;\r\n    } else {\r\n      scrollToGroup(currentGroup + 1);\r\n    }\r\n  };\r\n  const previousGroup = () => {\r\n    if (currentGroup === 0) {\r\n      //scrollToGroup(totalGroups - 1);\r\n      return;\r\n    } else {\r\n      scrollToGroup(currentGroup - 1);\r\n    }\r\n  };\r\n\r\n  const checkGroupValidation = (index) => {\r\n    const ret = {message: \"\", status: false};\r\n\r\n    switch (index) {\r\n      case 0:\r\n        if (email.length === 0) {ret.message = \"Please input email\"; ret.status = false; setEmailIssue(true)}\r\n        else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {ret.message = \"Invalid Email!\"; ret.status = false; setEmailIssue(true)}\r\n        else if (password.length === 0) {ret.message = \"Please input password\"; ret.status = false; setPasswordIssue(true);}\r\n        else if (password.length < 6) {ret.message = \"Password must be > 5 characters\"; ret.status = false; setPasswordIssue(true);}\r\n        else if (repassword.length === 0) {ret.message = \"Please type confirm password\"; ret.status = false; setRepasswordIssue(true);}\r\n        else if (password !== repassword) {ret.message = \"Not match password\"; ret.status = false; setRepasswordIssue(true);}\r\n        else { ret.message = \"\"; ret.status = true;}\r\n        break;\r\n      case 1:\r\n        if (businessname.length === 0) {ret.message = role === 'merchant' ? \"Please input businessname\":\"Please input username\"; ret.status = false; setBusinessIssue(true);}\r\n        else if (address.length === 0) {ret.message = \"Please input address\"; ret.status = false; setAddressIssue(true);}\r\n        else if (postcode.length === 0) {ret.message = \"Please input postcode\"; ret.status = false; setPostcodeIssue(true);}\r\n        else { ret.message = \"\"; ret.status = true;}\r\n        break;\r\n      case 2:\r\n        if (telephone.length === 0) {ret.message = \"Please input telephone\"; ret.status = false; setTelephoneIssue(true);}\r\n        else if (notes.length === 0) {ret.message = \"Please input notes\"; ret.status = false; setNotesIssue(true);}\r\n        else { ret.message = \"\"; ret.status = true;}\r\n        break;\r\n    }\r\n\r\n    return ret;\r\n  }\r\n\r\n  const checkProxyValidation = () => {\r\n    const ret = {message: \"\", status: false};\r\n\r\n    if (username.length === 0) { setUsernameIssue(true); ret.status = false; }\r\n    else if (username.length < 2) { setUsernameIssue(true); ret.status = false; }\r\n    else if (userpin.length === 0) { setPinIssue(true); ret.status = false; }\r\n    else if (isNaN(userpin) === true) { setPinIssue(true); ret.status = false; }\r\n    else if (userpin.length < 4) { setPinIssue(true); ret.status = false; }\r\n    else if (userpin.length > 4) { setPinIssue(true); ret.status = false; }\r\n    else { ret.message = \"\"; ret.status = true;}\r\n\r\n    return ret;\r\n  }\r\n\r\n  const nextGroupProc = async () => {\r\n    if (currentGroup === 0) {\r\n      const checking = checkGroupValidation(0);\r\n      if (!checking.status) {\r\n        dispatch(openSnackBar({ message: checking.message, status: 'error' }));  \r\n        return;\r\n      }\r\n\r\n      // dispatch(openSnackBar({ message: `Checking user email.`, status: 'success' }));\r\n      const res = await userService.checkUserByEmail(email, role);\r\n\r\n      if (res.result) {\r\n        dispatch(openSnackBar({ message: `User with email: ${email} already exists. Please check your email.`, status: 'error' }));\r\n        return;        \r\n      }\r\n      // dispatch(openSnackBar({ message: `User with email: ${email} is available.`, status: 'success' }));\r\n    }\r\n    else if (currentGroup === 1) {\r\n      const checking = checkGroupValidation(1);\r\n      if (!checking.status) {\r\n        dispatch(openSnackBar({ message: checking.message, status: 'error' }));  \r\n        return;\r\n      }\r\n      if (role === 'merchant') {\r\n        if (username.length > 0 || userpin.length > 0) {\r\n          const checking = checkProxyValidation();\r\n          if (!checking.status) {\r\n              return;\r\n          }\r\n          const chk = checkDupUsername(username)\r\n          if (chk) {\r\n              dispatch(openSnackBar({ message: `User with username: ${username} already exists. Please retype your username.`, status: 'error' }));\r\n              return;        \r\n          }\r\n        }\r\n        dispatch(registerUser({\r\n          businessname: businessname, \r\n          address: address, \r\n          postcode: postcode, \r\n          email: email, \r\n          password: password, \r\n          role: role, \r\n          userproxy: userproxy,\r\n          username: username,\r\n          userpin: userpin,\r\n          token: undefined\r\n        }));\r\n      }\r\n    }\r\n    else if (currentGroup === 2) {\r\n      if (role === 'customer') {\r\n        const checking = checkGroupValidation(2);\r\n        if (!checking.status) {\r\n          dispatch(openSnackBar({ message: checking.message, status: 'error' }));  \r\n          return;\r\n        }\r\n        dispatch(registerUser({\r\n          businessname: businessname, \r\n          address: address, \r\n          postcode: postcode, \r\n          email: email, \r\n          password: password, \r\n          role: role, \r\n          userproxy: [],\r\n          tel: telephone,\r\n          notes: notes,\r\n          username:'',\r\n          userpin: '',\r\n          token: undefined\r\n        }));\r\n      }\r\n\r\n      setRegproc(true);\r\n      return;\r\n    }\r\n    nextGroup();\r\n  }\r\n\r\n  const prevGroupProc = async () => {\r\n    previousGroup();\r\n  }\r\n\r\n  const checkDupUsername = (username) => {    \r\n    const tp = userproxy.filter((p) => p.username === username)\r\n    if (tp.length > 0)\r\n      return true;\r\n    return false;\r\n  }\r\n\r\n  const addUserProxy = async () => {\r\n    const checking = checkProxyValidation();\r\n      if (!checking.status) {\r\n        return;\r\n    }\r\n\r\n    const res = await userService.checkUserByProxyName(username);\r\n    if (res.result) {\r\n      dispatch(openSnackBar({ message: `User with username: ${username} already exists. Please retype your username.`, status: 'error' }));\r\n      return;        \r\n    }\r\n\r\n    const chk = checkDupUsername(username)\r\n    if (chk) {\r\n      dispatch(openSnackBar({ message: `User with username: ${username} already exists. Please retype your username.`, status: 'error' }));\r\n      return;        \r\n    }\r\n\r\n    let proxy = userproxy;\r\n    proxy.push({username: username, userpin: userpin});\r\n    setUserProxy(proxy);\r\n    setUsername('')\r\n    setUserpin('')\r\n  }\r\n\r\n  useEffect (() => {\r\n    if (successRegistered) {\r\n      navigate('/');\r\n    }\r\n  }, [successRegistered])\r\n\r\n  return (\r\n    <div className=\"w-full px-[3rem] text-xl\">\r\n      <div className='relative w-full h-full'>\r\n        <div className=\"carousel w-full h-full\">\r\n          {form_groups.map((form_group, i) => {\r\n            return (\r\n              <div className='w-full h-full flex-shrink-0' key={i} ref={refs[i]}>  \r\n                {form_group} \r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className='flex justify-between'>\r\n          <button \r\n              className={`w-[5rem] text-xl text-gray-100 text-left underline decoration-1 leading-[2.6rem]`}\r\n              onClick={() => currentGroup === 0 ? switchLogin() : prevGroupProc()}              \r\n          >{currentGroup === 0 ? \"Login\" : \"Back\"}</button>\r\n          <button \r\n              className={`w-[8rem] text-xl leading-[2.6rem] rounded-[0.6rem] bg-[#D9D9D9] text-gray-800`}\r\n              onClick={() => nextGroupProc()}\r\n          >Next</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterComponent;","import {useState} from 'react';\r\nimport LoginComponent from './login.component';\r\nimport RegisterComponent from './register.component';\r\nimport { openSnackBar } from '../../redux/snackBarReducer';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Auth = () => {\r\n  const [signFlag, setSignFlag] = useState(false); // false: signin, true: signup\r\n  const [role, setRole] = useState('merchant');  \r\n  const [currentGroup, setCurrentGroup] = useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  const switchLogin = () => {\r\n    setSignFlag(false);\r\n  }\r\n\r\n  const switchRegister = () => {\r\n    setSignFlag(true);\r\n  }\r\n\r\n  const handleRole = (roleValue) => {\r\n    if (currentGroup > 0) {\r\n      // dispatch(openSnackBar({ message: 'Cannot exchange role.', status: 'warning' })); \r\n      return;\r\n    }\r\n    setRole(roleValue);\r\n  }\r\n\r\n  return (\r\n    <div className='w-full h-[100vh] flex justify-center items-center'>\r\n        <div className='w-[50vw] max-w-[1000px] min-w-[380px] min-h-[460px] rounded-[1rem] border border-white'>\r\n            <div className='flex border-b border-gray-300'>\r\n                <button \r\n                    className={`w-full text-xl leading-[3.6rem] rounded-t-[1rem] ${role === 'merchant' ? 'bg-[#D9D9D9] text-gray-800' : 'bg-transparent text-gray-100'}`}\r\n                    onClick={() => handleRole('merchant')}\r\n                >Merchants</button>\r\n                <button \r\n                    className={`w-full text-xl leading-[3.6rem] rounded-t-[1rem] ${role === 'customer' ? 'bg-[#D9D9D9] text-gray-800' : 'bg-transparent text-gray-100'}`}\r\n                    onClick={() => handleRole('customer')}\r\n                >Customers</button>\r\n            </div>\r\n            {signFlag ? <RegisterComponent switchLogin={switchLogin} role={role} currentGroup={currentGroup} setCurrentGroup={setCurrentGroup}/> : <LoginComponent switchRegister={switchRegister} role={role} currentGroup={currentGroup} setCurrentGroup={setCurrentGroup}/>}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth;","import Auth from './auth/auth';\r\n\r\nconst Authenticate = () => {\r\n\r\n  return (    \r\n    <Auth />\r\n  );\r\n}\r\n\r\nexport default Authenticate;"],"names":["switchRegister","role","navigate","useNavigate","dispatch","useDispatch","from","useLocation","state","pathname","isLoggedIn","useSelector","selectLoggedIn","useState","email","setEmail","emailIssue","setEmailIssue","password","setPassword","passwordIssue","setPasswordIssue","useEffect","checkGroupValidation","index","ret","message","status","length","test","loginProc","checking","openSnackBar","logUserIn","className","type","value","onChange","e","target","onClick","switchLogin","currentGroup","setCurrentGroup","successRegistered","selectRegistering","selectRegisterSuccess","setRegproc","repassword","setRepassword","businessname","setBusinessname","address","setAddress","postcode","setPostcode","telephone","setTelephone","notes","setNotes","userproxy","username","userpin","repasswordIssue","setRepasswordIssue","businessIssue","setBusinessIssue","addressIssue","setAddressIssue","postcodeIssue","setPostcodeIssue","telephoneIssue","setTelephoneIssue","notesIssue","setNotesIssue","setUsernameIssue","setPinIssue","form_groups","refs","reduce","acc","val","i","createRef","totalGroups","scrollToGroup","current","scrollIntoView","behavior","block","inline","checkProxyValidation","isNaN","nextGroupProc","userService","result","checkDupUsername","registerUser","token","undefined","tel","prevGroupProc","filter","p","map","form_group","ref","signFlag","setSignFlag","setRole","handleRole","roleValue"],"sourceRoot":""}