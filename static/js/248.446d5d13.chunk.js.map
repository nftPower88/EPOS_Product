{"version":3,"file":"static/js/248.446d5d13.chunk.js","mappings":"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","sources":["pages/dashboard/wallet.jsx"],"sourcesContent":["import Layout from '../../components/Layout';\r\nimport Sidebar from './sidebar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport { selectUser } from '../../redux/userReducer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect, useState, createRef } from 'react';\r\nimport { web3Service } from '../../services/web3.service';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { COIN_TYPES } from '../../config/constants';\r\nimport { openSnackBar } from '../../redux/snackBarReducer';\r\nimport { selectFee, updateFeeData, selectAdminData, getFee } from '../../redux/adminReducer';\r\n\r\nconst Wallet = ({\r\n  searchBar = true,\r\n  homeBtn = true,\r\n  walletNav = true,\r\n  faqBtn = false\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const seluser = useSelector(selectUser);\r\n  const adminFee = useSelector(selectFee);\r\n  const adminData = useSelector(selectAdminData);\r\n  const [fee, setFee] = useState(0);\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [walletBalance, setWalletBalance] = useState(0);\r\n  const [transaction, setTransaction] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingBalance, setLoadingBalance] = useState(false);\r\n  const [type, setType] = useState(0);\r\n\r\n  const getWalletAddress = (type) => {\r\n    var addr = seluser.is_admin ? adminData.walpublic:seluser.walpublic;\r\n    switch (type) {\r\n      case 0:\r\n        addr = seluser.is_admin ? adminData.btcwalpublic:seluser.btcwalpublic;\r\n        break;\r\n      case 1:\r\n        break;\r\n      case 2:\r\n        break;\r\n      case 3:\r\n        break;\r\n      case 4:\r\n        break;\r\n      case 5:\r\n        break;\r\n    }\r\n    const adr = addr ? addr.substr(0, 4) + \"...\" + addr.substr(addr.length - 4, 4) : '';\r\n    setWalletAddress(adr);\r\n    getTransactions(type, addr);\r\n    getWalletBalance(type, addr);\r\n  }\r\n\r\n  const getWalletBalance = async (type, addr) => { \r\n    setLoadingBalance(true);    \r\n    if (type === 0) {\r\n      setWalletBalance(0);\r\n      setLoadingBalance(false);  \r\n      return;  \r\n    } \r\n    const ret = await web3Service.getWalletBalance(addr, type);\r\n    const balance = ret.data.ret;\r\n    setWalletBalance(balance);\r\n    setLoadingBalance(false);  \r\n  }\r\n\r\n  const getTransactions = async (type, addr) => {    \r\n    let res;\r\n    setLoading(true);   \r\n    setTransaction([]);\r\n    switch (type) {\r\n      case 0:        \r\n        setTransaction([]);\r\n        break;\r\n      case 1:\r\n        try {\r\n          res = await web3Service.trackTransactions(addr, 0, type);\r\n          setTransaction(res.data.ret);\r\n        } catch {          \r\n          setLoading(false);\r\n        }\r\n        break;\r\n      case 2:\r\n        break;\r\n      case 3:\r\n        break;\r\n      case 4:\r\n        try {\r\n          res = await web3Service.trackTransactions(addr, 0, type);\r\n          setTransaction(res.data.ret);\r\n        } catch {          \r\n          setLoading(false);\r\n        }\r\n        break;\r\n      case 5:\r\n        break;\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  const handleCopyClipboard = () => {\r\n    navigator.clipboard.writeText(walletAddress);\r\n    dispatch(openSnackBar({ message: \"Copied to clipboard successfully\", status: 'success' }));\r\n  }\r\n\r\n  const handleSetFee = () => {\r\n    dispatch(updateFeeData(fee));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWalletAddress(type);\r\n  }, [type])\r\n\r\n  useEffect(() => {\r\n    setFee(adminFee);\r\n  }, [adminFee])\r\n\r\n  useEffect(() => {\r\n    dispatch(getFee());\r\n  }, [])\r\n\r\n  return (\r\n    <Layout classes={'bg-[#404040] h-full'} searchBar={searchBar} walletNav={walletNav} faqBtn={faqBtn}>\r\n        <div className='flex flex-row'>\r\n            <div className=\"w-full h-[calc(100vh-80px)]\">\r\n              <div className='text-gray-100 text-2xl flex flex-row items-center px-[2rem] mt-6'>\r\n                {homeBtn && <FontAwesomeIcon icon={faHome} className='cursor-pointer' onClick={() => navigate('/')}/>}\r\n                <p className='ml-2 font-bold'>Wallet</p>\r\n              </div>\r\n              <div className='w-full flex justify-between text-gray-100 text-xl mb-2 bold px-[2rem] py-[1rem]'>\r\n                <div className=\"w-half flex items-center \">\r\n                  <p className='font-bold'>Coin Type: </p>\r\n                  <select\r\n                    className=\"bg-[#404040] font-bold border-b border-gray-300 text-gray-100 text-xl block w-[10rem] p-2.5 focus:outline-none ml-[1rem]\"\r\n                    onChange={(e) => setType(parseInt(e.target.value))}\r\n                  >\r\n                    <option value={0}>{COIN_TYPES[0]}</option>\r\n                    <option value={1}>{COIN_TYPES[1]}</option>\r\n                    <option value={4}>{COIN_TYPES[4]}</option>\r\n                  </select> \r\n                </div>\r\n                {seluser.is_admin && <div className=\"w-half flex items-center ml-[4rem]\">\r\n                  <p className='font-bold'>Client Fee: </p>\r\n                  <input \r\n                    type=\"number\" \r\n                    max={10} \r\n                    min={3} \r\n                    className=\"ml-[1rem] appearance-none bg-transparent border-b border-gray-300 w-[8rem] text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\"\r\n                    value={fee}\r\n                    onChange={(e) => setFee(parseFloat(e.target.value))}\r\n                  />\r\n                  <p className='font-bold mr-2'>{'(%)'}</p>\r\n                  <button \r\n                      className={`w-[8rem] text-xl leading-[2.6rem] rounded-[0.6rem] bg-[#D9D9D9] text-gray-800`}\r\n                      onClick={() => handleSetFee()}\r\n                  >Set</button>\r\n                </div>}\r\n              </div>\r\n              <div className='w-full flex justify-between text-gray-100 text-xl mb-2 bold px-[2rem] pb-[1rem]'>\r\n                <div className=\"w-[60%] flex items-center\">\r\n                  <div onClick={() => handleCopyClipboard()} className='text-left leading-[1.2rem] select-none'>\r\n                    Address: <span className=\"font-bold hover:text-gray-300 cursor-pointer hover:underline\">{walletAddress}</span>\r\n                  </div>\r\n                  <div className='text-left leading-[1.2rem] select-none ml-[4rem]'>\r\n                    Balance: <span className=\"font-bold\">{loadingBalance ? 'loading...' : walletBalance}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-[40%] flex items-center justify-end\">\r\n                  <button \r\n                      className={`w-[8rem] text-xl leading-[2.6rem] rounded-[0.6rem] bg-[#D9D9D9] text-gray-800`}\r\n                  >Withdraw</button>\r\n                </div>\r\n              </div>\r\n              <div className='w-full flex text-gray-100 leading-[1.8rem]'>\r\n                <p className='w-[15%] pl-6'>Txn Hash</p>\r\n                <p className='w-[12%] text-left'>Method</p>\r\n                <p className='w-[15%] text-left'>Age</p>\r\n                <p className='w-[15%] text-left'>From</p>\r\n                <p className='w-[18%] text-left'>To</p>\r\n                <p className='w-[10%] text-left'>Value</p>\r\n                <p className='w-[15%] text-left'>Token</p>\r\n              </div>\r\n              <div className='w-full h-[calc(100vh-21rem)] carousel mt-[1rem] text-gray-100 text-xl'>\r\n                {loading ? <div className=\"w-full text-center\">Loading...</div> : transaction.length > 0 ? <div className='w-full h-[calc(100vh-17em)] overflow-y-auto'>\r\n                  {\r\n                    transaction.map((t, index) => {\r\n                      return (\r\n                        <div key={index} className='w-full flex text-gray-100 leading-[1.4rem] bg-[#333333] border-b border-[#282828]'>\r\n                          <p className='w-[15%] text-left'>{t.blockHash.substr(0, 8) + \"...\"}</p>\r\n                          <p className='w-[12%] text-left'>{t.functionName}</p>\r\n                          <p className='w-[15%] text-left'>{t.timeStamp}</p>\r\n                          <p className='w-[15%] text-left'>{t.from.substr(0, 8) + \"...\"}</p>\r\n                          <p className='w-[18%] text-left'>{t.to.substr(0, 8) + \"...\"}</p>\r\n                          <p className='w-[10%] text-left'>{(t.value / 10**18).toFixed(8)}</p>\r\n                          <p className='w-[15%] text-left'>Token</p>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </div> : <div className=\"w-full text-center\">Empty Data</div>}\r\n              </div>\r\n            </div>\r\n            {(seluser && seluser.role === 'merchant') && <Sidebar />}\r\n        </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Wallet;"],"names":["searchBar","homeBtn","walletNav","faqBtn","navigate","useNavigate","dispatch","useDispatch","seluser","useSelector","selectUser","adminFee","selectFee","adminData","selectAdminData","useState","fee","setFee","walletAddress","setWalletAddress","walletBalance","setWalletBalance","transaction","setTransaction","loading","setLoading","loadingBalance","setLoadingBalance","type","setType","getWalletBalance","addr","web3Service","ret","balance","data","getTransactions","res","useEffect","is_admin","walpublic","btcwalpublic","adr","substr","length","getWalletAddress","getFee","classes","className","icon","faHome","onClick","onChange","e","parseInt","target","value","COIN_TYPES","max","min","parseFloat","updateFeeData","navigator","clipboard","writeText","openSnackBar","message","status","map","t","index","blockHash","functionName","timeStamp","from","to","toFixed","role"],"sourceRoot":""}