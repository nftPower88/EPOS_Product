{"version":3,"file":"static/js/131.f9754684.chunk.js","mappings":"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","sources":["components/Navbar/index.jsx","components/Layout.jsx","pages/dashboard/merchant_group/modals/carts.modal.jsx","pages/dashboard/merchant_group/modals/waiting.payment.modal.jsx","pages/dashboard/sidebar.jsx","services/web3.service.js"],"sourcesContent":["import { Menu, Transition } from \"@headlessui/react\";\r\nimport { Fragment } from \"react\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretLeft, faUser } from '@fortawesome/free-solid-svg-icons'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { selectUser, updateTooltip } from '../../redux/userReducer';\r\nimport { API_URL } from '../../config/constants';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Tooltip from 'react-power-tooltip';\r\nimport { getNotification, selectNotifications, updateNotification, updateNotificationShow } from '../../redux/notificationReducer';\r\nimport { cleanCurOrders, setCurrentGroup } from '../../redux/orderReducer';\r\n\r\nexport const Navbar = ({\r\n  customSettingComponent,\r\n  searchBar = true,\r\n  searchKeyword = '',\r\n  normalBar = false,\r\n  disableRealestate = false\r\n}) => {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [isMore, setIsMore] = useState(false);\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  const [keyword, setKeyword] = useState(searchKeyword);\r\n  const notifications = useSelector(selectNotifications);\r\n  const [searchCategory, setSearchCategory] = useState('');\r\n  const [searchProduct, setSearchProduct] = useState('');\r\n  const [searchCustomer, setSearchCustomer] = useState('');\r\n  const [showBack, setShowBack] = useState(true);\r\n\r\n  const onLogout = (e) => {\r\n    dispatch(setCurrentGroup(0));\r\n    dispatch(cleanCurOrders());\r\n    navigate('/logout');\r\n  }\r\n\r\n  const onEditProfile = (e) => {\r\n    navigate('/user/edit');\r\n  }\r\n\r\n  const handleBack = () => {\r\n    navigate(-1);\r\n  }\r\n\r\n  const handleSearchCategory = (event) => {\r\n    if (event.code === 'Enter') {\r\n      navigate('/search/category/' + searchCategory);\r\n    }\r\n  }\r\n\r\n  const handleSearchProduct = (event) => {\r\n    if (event.code === 'Enter') {\r\n      navigate('/search/product/' + searchProduct);\r\n    }\r\n  }\r\n\r\n  const handleSearchCustomer = (event) => {\r\n    if (event.code === 'Enter') {\r\n      navigate('/search/customer/' + searchCustomer);\r\n    }\r\n  }\r\n\r\n  const handleWallet = () => {\r\n    navigate('/wallet');\r\n  }\r\n\r\n  const handleTest = async () => {\r\n \r\n  }\r\n\r\n  useEffect (() => {\r\n    if (location.pathname === \"/\") {\r\n      setShowBack(false)\r\n    } else {\r\n      setShowBack(true)\r\n    }\r\n  }, [location.pathname])\r\n\r\n  return (\r\n    <div className=\"navbar w-full\">\r\n      <div className=\"flex items-center w-full justify-between\">\r\n        {/* {user && user._id && */}\r\n        <>\r\n          <Menu as=\"div\" className=\"relative inline-block text-left nav-menu mr-5 mt-1\">\r\n            {showBack && <Menu.Button onClick={() => handleBack()} data-tip data-for=\"notificationId\" className=\"inline-flex w-full justify-center rounded-md text-sm text-gray-400 hover:text-gray-100\">\r\n              <FontAwesomeIcon icon={faCaretLeft} className=\"text-3xl\"/>\r\n            </Menu.Button>}\r\n          </Menu>\r\n\r\n          {searchBar && (\r\n            <>\r\n              <input \r\n                  className=\"appearance-none italic bg-transparent border-b border-gray-300 w-[25%] text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                  type=\"search\"\r\n                  placeholder='Search Category'\r\n                  value={searchCategory}\r\n                  onChange={(e) => setSearchCategory(e.target.value)}\r\n                  onKeyUp={(e) => handleSearchCategory(e)} />\r\n              <input \r\n                    className=\"appearance-none italic bg-transparent border-b border-gray-300 w-[25%] text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                    type=\"search\"\r\n                    placeholder='Search Product'\r\n                    value={searchProduct}\r\n                    onChange={(e) => setSearchProduct(e.target.value)}\r\n                    onKeyUp={(e) => handleSearchProduct(e)} />\r\n              <input \r\n                    className=\"appearance-none italic bg-transparent border-b border-gray-300 w-[25%] text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                    type=\"search\"\r\n                    placeholder='Search Customer'\r\n                    value={searchCustomer}\r\n                    onChange={(e) => setSearchCustomer(e.target.value)}\r\n                    onKeyUp={(e) => handleSearchCustomer(e)} />\r\n            </>\r\n          )}\r\n          \r\n          <Menu as=\"div\" className=\"relative inline-block text-left nav-menu mt-1\">\r\n            <Menu.Button className=\"inline-flex w-full justify-center rounded-md text-sm text-gray-400 hover:text-app-black\">\r\n              <FontAwesomeIcon icon={faUser} className=\"text-4xl\"/>\r\n            </Menu.Button>\r\n\r\n            <Transition\r\n              as={Fragment}\r\n              enter=\"transition ease-out duration-100\"\r\n              enterFrom=\"transform opacity-0 scale-95\"\r\n              enterTo=\"transform opacity-100 scale-100\"\r\n              leave=\"transition ease-in duration-75\"\r\n              leaveFrom=\"transform opacity-100 scale-100\"\r\n              leaveTo=\"transform opacity-0 scale-95\"\r\n            >\r\n              <Menu.Items className=\"absolute right-0 mt-2 w-56 origin-top-right divide-y divide-gray-100 rounded-sm bg-white shadow-lg ring-2 ring-gray-200 focus:outline-none z-10\">\r\n                <div className=\"px-1 py-1 \">\r\n                  {user && <div className=\"bg-[#606060] text-gray-100 py-2 text-center font-bold\">\r\n                    {(user.userproxy && user.userproxy.length > 0) ? user.userproxy[0].username : user.businessname}\r\n                  </div>}\r\n                  <Menu.Item>\r\n                    {({ active }) => (\r\n                      <button\r\n                        className={`${\r\n                          active ? \"bg-[#404040] text-white\" : \"text-gray-900\"\r\n                        } group  w-full items-center rounded-sm px-2 py-2 text-sm text-center`}\r\n                        onClick={()=>handleWallet()}\r\n                      >\r\n                        Wallet\r\n                        &nbsp;<i className=\"fa fa-right-from-backet\">&nbsp;</i>\r\n                      </button>\r\n                    )}\r\n                  </Menu.Item>\r\n                  {/* <Menu.Item>\r\n                    {({ active }) => (\r\n                      <button\r\n                        className={`${\r\n                          active ? \"bg-[#404040] text-white\" : \"text-gray-900\"\r\n                        } group  w-full items-center rounded-sm px-2 py-2 text-sm text-center`}\r\n                        onClick={()=>handleTest()}\r\n                      >\r\n                        Test\r\n                        &nbsp;<i className=\"fa fa-right-from-backet\">&nbsp;</i>\r\n                      </button>\r\n                    )}\r\n                  </Menu.Item> */}\r\n                  <Menu.Item>\r\n                    {({ active }) => (\r\n                      <button\r\n                        className={`${\r\n                          active ? \"bg-[#404040] text-white\" : \"text-gray-900\"\r\n                        } group  w-full items-center rounded-sm px-2 py-2 text-sm text-center`}\r\n                        onClick={(e) => onLogout(e)}\r\n                      >\r\n                        Logout\r\n                        &nbsp;<i className=\"fa fa-right-from-backet\">&nbsp;</i>\r\n                      </button>\r\n                    )}\r\n                  </Menu.Item>\r\n                </div>\r\n              </Menu.Items>\r\n            </Transition>\r\n          </Menu>\r\n        </>\r\n        {/* } */}\r\n      </div>\r\n    </div>\r\n  );\r\n};","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Navbar } from './Navbar';\r\n\r\nconst Layout = ({\r\n  children,\r\n  showNavbar = true,\r\n  navbarCustomSettingComponent,\r\n  layoutClass = 'bg-app-form-border',\r\n  searchBar,\r\n  searchKeyword,\r\n  showNormal = false,\r\n  noRealestate = false,\r\n  classes = ''\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // const init = async () => {\r\n    //   const queryOpts = { name: 'clipboard-read', allowWithoutGesture: false };\r\n    //   await navigator.permissions.query(queryOpts);\r\n    //   // Will be 'granted', 'denied' or 'prompt':\r\n    // }\r\n    // init();\r\n  }, [])\r\n  return (\r\n    <div className={`w-full min-h-screen bg-[#404040] ${layoutClass}`}>\r\n      {showNavbar && (\r\n        showNormal ? \r\n        <div className=\"px-6 md:px-10 lg:px-12 py-2\">\r\n          <Navbar normalBar={true} disableRealestate={noRealestate}/>\r\n        </div> :\r\n        <div className=\"px-6 md:px-10 lg:px-12 py-2\">\r\n          <Navbar\r\n            customSettingComponent={navbarCustomSettingComponent}\r\n            searchBar={searchBar}\r\n            searchKeyword={searchKeyword}\r\n            disableRealestate={noRealestate}\r\n          />\r\n        </div>\r\n      )}\r\n      <div className={`${classes}`}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Fragment, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { openSnackBar } from '../../../../redux/snackBarReducer';\r\n\r\nconst CartsModal = ({isModal, setIsModal, cartsLink, registerFlag, handleRegister}) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('')\r\n\r\n  const handleConfirm = () => {\r\n    if (name.length === 0) {\r\n      dispatch(openSnackBar({ message: \"Type saved order name.\", status: 'error' }));\r\n      return;\r\n    }\r\n\r\n    if (registerFlag) {\r\n      handleRegister(name);\r\n    } else {\r\n      navigate(cartsLink + '/' + name);\r\n    }\r\n    setIsModal(false);\r\n  }\r\n\r\n  const handleKeyEvent = (e) => {\r\n    if (e.code === 'Enter') {\r\n      handleConfirm();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isModal) {\r\n      setName('')\r\n    }\r\n  }, [isModal]);\r\n\r\n  return (\r\n    <Transition appear show={isModal} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        onClose={() => {}}\r\n        className=\"relative z-50\">\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\">\r\n          <div className=\"fixed inset-0 backdrop-blur-sm bg-[#FFFFFF44]\" aria-hidden=\"true\" />\r\n        </Transition.Child>\r\n        <div className=\"fixed inset-0 flex items-center bg-transparent justify-center \">\r\n          {/* The actual dialog panel  */}\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 scale-95\"\r\n            enterTo=\"opacity-100 scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 scale-100\"\r\n            leaveTo=\"opacity-0 scale-95\">\r\n            <Dialog.Panel className=\" max-w-full transform transition-all md:max-w-full\">\r\n              <div className=\"relative bg-[#404040] w-[30vw] max-w-[1000px] min-w-[380px] min-h-[160px] rounded-[1rem] drop-shadow-md p-6 text-center shadow-xl\">                              \r\n                {/* TITLE */}\r\n                <div className=''>\r\n                  <h1 className='text-md text-left text-[#D9D9D9] select-none'>Enter a name for the saved order:</h1>\r\n                </div>\r\n                {/* CONTENTS */}\r\n                <div className=\"min-h-[2rem] pb-[0.5rem]\">\r\n                  <input \r\n                    className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    onKeyUp={(e) => handleKeyEvent(e)} />\r\n                </div>\r\n                {/* CONTROLS */}\r\n                <div className='absolute right-6 bottom-4'>\r\n                  <button \r\n                      className={`w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#404040] border border-[#D9D9D9] text-gray-100 mr-6`}            \r\n                      onClick={() => setIsModal(false)}\r\n                  >Cancel</button>\r\n                  <button \r\n                      className={`w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#D9D9D9] text-gray-800`}            \r\n                      onClick={() => handleConfirm()}\r\n                  >Confirm</button>\r\n                </div>         \r\n              </div>\r\n            </Dialog.Panel>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default CartsModal;","import { Fragment, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUser } from '../../../../redux/userReducer';\r\nimport { QRCodeSVG } from 'qrcode.react';\r\nimport { paymentedOrder, selectWaitingPaymentID } from '../../../../redux/orderReducer';\r\nimport { ordersService } from '../../../../services/orders.service';\r\nimport { COIN_TYPES, API_BASE } from '../../../../config/constants';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faClose } from '@fortawesome/free-solid-svg-icons';\r\nimport { web3Service } from '../../../../services/web3.service';\r\n\r\nconst WaitingPaymentModal = ({isModal, setIsModal, cposOrdered}) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');  \r\n  const user = useSelector(selectUser);\r\n  const paymentID = useSelector(selectWaitingPaymentID);\r\n\r\n  const handlePaymentCompleted = () => {   \r\n    dispatch(paymentedOrder(paymentID));\r\n  }\r\n\r\n  const getPaymentStatus = async (id) => {\r\n    while(true) {\r\n      const ret = await web3Service.trackTransactions(cposOrdered.coinType === 0 ? user.btcwalpublic:user.walpublic, cposOrdered.coinType, cposOrdered.coinAmount);\r\n      if (ret.status === 'success') {\r\n        handlePaymentCompleted();\r\n        setIsModal(false); \r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect (() => {\r\n    if (paymentID != 0) {\r\n      getPaymentStatus(paymentID)\r\n    }\r\n  }, [paymentID])\r\n\r\n  return (\r\n    <Transition appear show={isModal} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        onClose={() => {}}\r\n        className=\"relative z-50\">\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\">\r\n          <div className=\"fixed inset-0 backdrop-blur-sm bg-[#FFFFFF44]\" aria-hidden=\"true\" />\r\n        </Transition.Child>\r\n        <div className=\"fixed inset-0 flex items-center bg-transparent justify-center \">\r\n          {/* The actual dialog panel  */}\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 scale-95\"\r\n            enterTo=\"opacity-100 scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 scale-100\"\r\n            leaveTo=\"opacity-0 scale-95\">\r\n            <Dialog.Panel className=\" max-w-full transform transition-all md:max-w-full\">\r\n              <div className=\"relative bg-[#404040] w-[30vw] max-w-[1000px] min-w-[380px] min-h-[160px] rounded-[1rem] drop-shadow-md p-6 text-center shadow-xl\">                              \r\n                {/* TITLE */}  \r\n                <div className='flex justify-between items-center'>\r\n                  <h1 className='text-md text-left text-[#D9D9D9] select-none'>Waiting for payment:</h1>\r\n                  <FontAwesomeIcon icon={faClose} className='cursor-pointer' onClick={() => setIsModal(false)}/>\r\n                </div>  \r\n                {/* CONTENTS */}\r\n                <div className=\"min-h-[2rem] py-[1rem] flex justify-center mb-[1rem]\">\r\n                  <QRCodeSVG \r\n                      value={user ? user.walpublic : '0x0000000000'}\r\n                      level=\"H\"\r\n                      size={256}\r\n                  />                  \r\n                </div>\r\n                {/* CONTROLS */}\r\n                <div className='absolute right-6 bottom-4'>\r\n                  {cposOrdered.coinAmount && <h1 className='text-md text-left text-[#D9D9D9] select-none'>Amount: {cposOrdered.coinAmount.toFixed(8)} {COIN_TYPES[cposOrdered.coinType]}</h1>}\r\n                </div>  \r\n              </div>\r\n            </Dialog.Panel>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default WaitingPaymentModal;","import {useState, useEffect, createRef, Fragment} from 'react';\r\nimport { selectUser } from '../../redux/userReducer';\r\nimport { selectCurOrders, selectCurCount, selectCoinType, addCurOrders, cleanCurOrders, selectVAT, setCoinType, selectCurrentGroup, setCurrentGroup } from '../../redux/orderReducer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faFloppyDisk, faMinus, faPlus, faCaretLeft, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { selectProducts, getProducts } from '../../redux/productReducer';\r\nimport { floatAdd, floatMul, getCoinAmount } from '../../utils/utils';\r\n// import ReactTooltip from \"react-tooltip\";\r\nimport { SUPPORT_COINS } from \"../../config/constants\";\r\nimport { QRCodeSVG } from 'qrcode.react';\r\n// import { Link } from 'react-router-dom';\r\nimport { openSnackBar } from '../../redux/snackBarReducer';\r\nimport { selectCustomer, updateOrderData, setCustomer } from '../../redux/orderReducer';\r\nimport { selectAllUsercustomers, getAllUsercustomerData } from '../../redux/userReducer';\r\nimport CartsModal from './merchant_group/modals/carts.modal';\r\nimport { COIN_EXPLORER_LINK } from '../../config/constants';\r\nimport {\r\n    selectCoinAllowBTC,\r\n    selectCoinAllowETH,\r\n    selectCoinAllowBNB,\r\n    selectCoinAllowXRP,\r\n    selectCoinAllowUSDT,\r\n    selectCoinAllowCPOS,\r\n    selectAllowDiscount\r\n} from '../../redux/settingReducer';\r\nimport WaitingPaymentModal from './merchant_group/modals/waiting.payment.modal';\r\nimport { selectCoinData } from '../../redux/web3Reducer';\r\nimport { Menu, Transition } from \"@headlessui/react\";\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const orders = useSelector(selectCurOrders);\r\n  const orderCount = useSelector(selectCurCount);\r\n  const products = useSelector(selectProducts);\r\n  const vat = useSelector(selectVAT);\r\n  const coinType = useSelector(selectCoinType);\r\n  const customer = useSelector(selectCustomer);\r\n  const customers = useSelector(selectAllUsercustomers);\r\n  const [subtotalCost, setSubTotalCost] = useState(0);\r\n  const [cartsModal, setCartsModal] = useState(false);\r\n  const [paymentModal, setPaymentModal] = useState(false);\r\n  const coinBTC = useSelector(selectCoinAllowBTC);\r\n  const coinETH = useSelector(selectCoinAllowETH);\r\n  const coinBNB = useSelector(selectCoinAllowBNB);\r\n  const coinXRP = useSelector(selectCoinAllowXRP);\r\n  const coinUSDT = useSelector(selectCoinAllowUSDT);\r\n  const coinCPOS = useSelector(selectCoinAllowCPOS);\r\n  const [cposOrdered, setCposOrdered] = useState({});\r\n  const [coinGecko, setCoinGecko] = useState(false);\r\n  const coinData = useSelector(selectCoinData);\r\n  const discount = useSelector(selectAllowDiscount);\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let cost = 0;\r\n    orders.map((o, index) => {\r\n        const p = getProduct(o.productId);\r\n        cost = floatAdd(cost, floatMul(p.price, o.amount));\r\n    });\r\n    setSubTotalCost(cost);\r\n    \r\n  }, [orderCount])\r\n\r\n  const getProduct = (id) => {\r\n    const p = products.filter((e) => e._id === id);\r\n    return p[0];\r\n  }\r\n\r\n  const handleMinus = (p) => {\r\n    const order = {\r\n        productId: p._id,\r\n        amount: -1\r\n    }\r\n    dispatch(addCurOrders(order));\r\n  }\r\n\r\n  const handlePlus = (p) => {\r\n    const order = {\r\n        productId: p._id,\r\n        amount: 1\r\n    }\r\n    dispatch(addCurOrders(order));\r\n  }\r\n\r\n  const handleClear = () => {\r\n    scrollToGroup(0);\r\n    dispatch(cleanCurOrders());\r\n  }\r\n\r\n  const handleSave = async (name) => {\r\n    const coinAmount = await getCoinAmount(coinType, subtotalCost, vat, coinData, discount);\r\n    const order = {\r\n        name: name,\r\n        merchantId: user._id,\r\n        customerId: customer ? customer._id:'000000000000000000000000',\r\n        order: orders,\r\n        coinType: coinType,\r\n        coinAmount: coinAmount\r\n    };\r\n    dispatch(updateOrderData(0, order));\r\n    scrollToGroup(0);\r\n    dispatch(cleanCurOrders());\r\n  }\r\n\r\n  const handleCoinType = (type) => {\r\n    dispatch(setCoinType(type));\r\n  }\r\n\r\n  const getCoinValidate = (index) => {\r\n      let valid = false;\r\n      switch (index) {\r\n          case 0:\r\n              valid = coinBTC;\r\n              break;\r\n          case 1:\r\n              valid = coinETH;\r\n              break;\r\n          case 2:\r\n              valid = coinBNB;\r\n              break;\r\n          case 3:\r\n              valid = coinXRP;\r\n              break;\r\n          case 4:\r\n              valid = coinUSDT;\r\n              break;\r\n          case 5:\r\n              valid = coinCPOS;\r\n              break;\r\n      }\r\n\r\n      return valid;\r\n  }\r\n\r\n  useEffect(() => {\r\n    scrollToGroup(currentGroup, false);\r\n  }, [])\r\n\r\n  useEffect( () => {\r\n    dispatch(getAllUsercustomerData());\r\n  }, [])\r\n\r\n  const form_groups = [\r\n    <div key={1} className='w-full h-full overflow-x-auto text-[#404040]'>\r\n        {\r\n            orders.map((o, index) => {\r\n                const p = getProduct(o.productId);\r\n                return (\r\n                    <div key={index} className=\"border-b border-gray-900 py-4\">    \r\n                        <div className='flex justify-between text-md'>\r\n                            <div>{p.name}</div>\r\n                            <div>{p.price.toFixed(2)}</div>\r\n                        </div>\r\n                        <div className='flex justify-between text-sm'>\r\n                            <div>SKU: {p.sku}</div>\r\n                            <div className='flex justify-center items-center'>\r\n                                <FontAwesomeIcon \r\n                                    icon={faMinus}\r\n                                    className=\"cursor-pointer\"\r\n                                    onClick={()=>handleMinus(p)}\r\n                                />\r\n                                <p className='px-2 select-none'>{o.amount}</p>\r\n                                <FontAwesomeIcon \r\n                                    icon={faPlus} \r\n                                    className=\"cursor-pointer\"\r\n                                    onClick={()=>handlePlus(p)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n    </div>,\r\n    <div key={2} className='w-full h-full grid grid-cols-2 gap-2 text-center py-[2rem] px-[2rem]'>\r\n        {\r\n            SUPPORT_COINS.map((item, index) => {\r\n                const valid = getCoinValidate(index)\r\n                return (\r\n                valid ? <div key={index} onClick={() => handleCoinType(index)} className={`w-[8rem] h-[8rem] flex justify-center items-center ${coinType === index ? 'bg-[#B9B9B9]':''} border border-[#404040] text-[#404040] rounded-[1rem] select-none cursor-pointer`}>\r\n                    <p className='w-[60%]'>{item}</p>\r\n                </div> : null\r\n                )\r\n            })\r\n        }\r\n    </div>,\r\n    <div key={3} className='w-full h-full'>\r\n        <div className='w-full h-[5rem]'>            \r\n        </div>\r\n        <div className='w-full flex justify-center'>            \r\n            <QRCodeSVG \r\n                value={user ? user.walpublic : '0x0000000000'}\r\n                level=\"H\"\r\n                size={256}\r\n            />\r\n        </div>\r\n        <div className='w-full text-center'>\r\n            <p className='text-red-600 text-md my-[1rem]'>Please ensure block is confirmed before parting with goods/rendering services.</p>\r\n            {user && <p className='text-[#404040] font-bold text-md my-[1rem]'>Check status of transaction here: <a href={`${COIN_EXPLORER_LINK[coinType]}${user.walpublic}`}>{`${COIN_EXPLORER_LINK[coinType]}${user.walpublic}`}</a></p>}\r\n        </div>\r\n    </div>\r\n  ]\r\n\r\n  const currentGroup = useSelector(selectCurrentGroup);\r\n\r\n  const refs = form_groups.reduce((acc, val, i) => {\r\n    acc[i] = createRef();\r\n    return acc;\r\n  }, {});\r\n\r\n  const totalGroups = form_groups.length;\r\n  const scrollToGroup = (i, mode=true) => {\r\n    dispatch(setCurrentGroup(i));\r\n    refs[i].current.scrollIntoView({\r\n      behavior: mode ? 'smooth':'instant',\r\n      block: 'nearest',\r\n      inline: 'start',\r\n    });\r\n  };\r\n  const nextGroup = () => {\r\n    if (currentGroup >= totalGroups - 1) {\r\n      scrollToGroup(0);\r\n      return;\r\n    } else {\r\n      scrollToGroup(currentGroup + 1);\r\n    }\r\n  };\r\n  \r\n  const previousGroup = () => {\r\n    if (currentGroup === 0) {\r\n      scrollToGroup(totalGroups - 1);\r\n      return;\r\n    } else {\r\n      scrollToGroup(currentGroup - 1);\r\n    }\r\n  };\r\n\r\n  const handleNextGroup = async () => {\r\n    if (currentGroup === 0) {\r\n        if (orders.length === 0) {\r\n            dispatch(openSnackBar({ message: \"Empty orders.\", status: 'error' }));\r\n            return;\r\n        }\r\n        // if (!customer) {\r\n        //     dispatch(openSnackBar({ message: \"Select customer.\", status: 'error' }));\r\n        //     return;\r\n        // }\r\n    }\r\n    if (currentGroup === 2) {\r\n        /// waiting receive payment\r\n        const coinAmount = await getCoinAmount(coinType, subtotalCost, vat, coinData, discount);\r\n        const order = {\r\n            name: \"cpos_ordered\",\r\n            merchantId: user._id,\r\n            customerId: customer ? customer._id: '000000000000000000000000',\r\n            order: orders,\r\n            coinType: coinType,\r\n            coinAmount: coinAmount\r\n        };\r\n        setCposOrdered(order);\r\n        setPaymentModal(true);\r\n        dispatch(updateOrderData(0, order));\r\n        dispatch(cleanCurOrders());\r\n    }\r\n\r\n    nextGroup();\r\n  }\r\n\r\n  const handlePrevGroup = () => {\r\n    previousGroup();\r\n  }\r\n\r\n  const getHandleTitle = () => {\r\n    let ret = \"\";\r\n    switch (currentGroup) {\r\n        case 0:\r\n            ret = \"Checkout\"\r\n            break;\r\n        case 1:\r\n            ret = \"Generate QR\"\r\n            break;\r\n        case 2:\r\n            ret = \"Complete Order\"\r\n            break;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  const getSidebarTitle = () => {\r\n    let ret = \"\";\r\n    switch (currentGroup) {\r\n        case 0:\r\n            ret = customer ? customer.name : '';\r\n            break;\r\n        case 1:\r\n            ret = \"Select crypto:\"\r\n            break;\r\n        case 2:\r\n            ret = \"Customer to scan QR to complete order:\"\r\n            break;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  return (\r\n    <div className='bg-[#D9D9D9] h-[calc(100vh-80px)] w-[0px] sm:w-[360px] md:w-[360px] lg:w-[360px] xl:w-[360px] transition-all'>\r\n        <div className='w-full h-full relative'>\r\n            <div className='w-full h-[2rem] flex items-center text-[#404040]'>\r\n                {currentGroup!==0 && <button \r\n                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] text-[#404040]`}\r\n                    onClick={() => handlePrevGroup()}\r\n                ><FontAwesomeIcon icon={faCaretLeft}/></button>}\r\n                {/* {currentGroup===0 && <button \r\n                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] text-[#404040]`}\r\n                ><FontAwesomeIcon icon={faUser}/></button>} */}\r\n                <Menu as=\"div\" className=\"relative inline-block text-left nav-menu mt-1\">\r\n                    <Menu.Button className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] text-[#404040]`}>\r\n                        <FontAwesomeIcon icon={faUser}/>\r\n                    </Menu.Button>\r\n\r\n                    <Transition\r\n                        as={Fragment}\r\n                        enter=\"transition ease-out duration-100\"\r\n                        enterFrom=\"transform opacity-0 scale-95\"\r\n                        enterTo=\"transform opacity-100 scale-100\"\r\n                        leave=\"transition ease-in duration-75\"\r\n                        leaveFrom=\"transform opacity-100 scale-100\"\r\n                        leaveTo=\"transform opacity-0 scale-95\"\r\n                        >\r\n                        <Menu.Items className=\"absolute right-0 mt-2 w-56 origin-top-right divide-y divide-gray-100 rounded-sm bg-white shadow-lg ring-2 ring-gray-200 focus:outline-none z-10\">\r\n                            <div className=\"px-1 py-1\">  \r\n                                {\r\n                                    customers.map((c, index) => {\r\n                                        return (\r\n                                            <Menu.Item key={index}>\r\n                                                {({ active }) => (\r\n                                                <button\r\n                                                    className={`${\r\n                                                    active ? \"bg-[#404040] text-white\" : \"text-gray-900\"\r\n                                                    } group  w-full items-center rounded-sm px-2 py-2 text-sm text-center`}\r\n                                                    onClick={()=>dispatch(setCustomer(c))}\r\n                                                >\r\n                                                    {c.name}\r\n                                                    &nbsp;<i className=\"fa fa-right-from-backet\">&nbsp;</i>\r\n                                                </button>\r\n                                                )}\r\n                                            </Menu.Item>\r\n                                        );\r\n                                    })\r\n                                }   \r\n                            </div>\r\n                        </Menu.Items>\r\n                    </Transition>\r\n                </Menu>\r\n                <p>{getSidebarTitle()}</p>\r\n            </div>\r\n            <div className='w-full h-[68vh] px-4'>\r\n                <div className='relative w-full h-full'>\r\n                    <div className=\"carousel w-full h-full\">\r\n                        {form_groups.map((form_group, i) => {\r\n                            return (\r\n                            <div className='w-full h-full flex-shrink-0' key={i} ref={refs[i]}>  \r\n                                {form_group} \r\n                            </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='w-full absolute bottom-0 px-6 py-2 text-[#404040]'>\r\n                <div className='flex justify-between'>\r\n                    <p>Subtotal</p>\r\n                    <p>{subtotalCost.toFixed(2)}</p>                    \r\n                </div>\r\n                {discount && <div className='flex justify-between'>\r\n                    <p>Discount (@{floatMul(vat, 100)}%)</p>\r\n                    <p>{floatMul(subtotalCost, vat).toFixed(2)}</p>\r\n                </div>}\r\n                <div className='flex justify-between font-bold'>\r\n                    <p>Total</p>\r\n                    <p>{discount ? floatAdd(subtotalCost, floatMul(subtotalCost, -vat)).toFixed(2) : subtotalCost.toFixed(2)}</p>\r\n                </div>\r\n                <div className='flex justify-between mt-2'>\r\n                    <div className='flex justify-between gap-2'>                        \r\n                        <button \r\n                            className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}\r\n                            onClick={() => handleClear()}\r\n                        ><FontAwesomeIcon icon={faTrash}/></button>\r\n                        <button \r\n                            className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                            onClick={() => {                                \r\n                                if (orders.length === 0) {\r\n                                    dispatch(openSnackBar({ message: \"Empty orders.\", status: 'error' }));\r\n                                    return;\r\n                                }\r\n                                // if (!customer) {\r\n                                //     dispatch(openSnackBar({ message: \"Select customer.\", status: 'error' }));\r\n                                //     return;\r\n                                // }\r\n                                setCartsModal(true);\r\n                            }}\r\n                        ><FontAwesomeIcon icon={faFloppyDisk}/></button>\r\n                        {/* { currentGroup === 0 && <button \r\n                            data-tip data-for=\"percentId\"\r\n                            className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                        ><FontAwesomeIcon icon={faPercent}/></button>} */}\r\n                        {/* <ReactTooltip \r\n                            id=\"percentId\" \r\n                            place=\"top\" // top, right, bottom, left\r\n                            type=\"dark\"  // dark, success, warning, error, info, light\r\n                            effect=\"solid\" // float, solid\r\n                            clickable={true}\r\n                        >\r\n                            <div className='grid grid-cols-3 gap-2'>\r\n                                <button \r\n                                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                                    onClick={() => dispatch(setVAT(0.05))}\r\n                                >5%</button>\r\n                                <button \r\n                                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                                    onClick={() => dispatch(setVAT(0.1))}\r\n                                >10%</button>\r\n                                <button \r\n                                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                                    onClick={() => dispatch(setVAT(0.15))}\r\n                                >15%</button>\r\n                                <button \r\n                                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                                    onClick={() => dispatch(setVAT(0.2))}\r\n                                >20%</button>\r\n                                <button \r\n                                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                                    onClick={() => dispatch(setVAT(0.25))}\r\n                                >25%</button>\r\n                                <button \r\n                                    className={`w-[2rem] h-[2rem] text-[0.4rem] rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                                >Custom</button>\r\n                            </div>\r\n                        </ReactTooltip> */}\r\n                        \r\n                    </div>\r\n                    <button \r\n                        className={`w-[9rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}  \r\n                        onClick={() => handleNextGroup()}          \r\n                    >{coinGecko ? 'Calculating' : getHandleTitle()}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <CartsModal isModal={cartsModal} setIsModal={setCartsModal} registerFlag={true} handleRegister={handleSave}/>\r\n        <WaitingPaymentModal isModal={paymentModal} setIsModal={setPaymentModal} cposOrdered={cposOrdered}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import { authHeader, handleResponse } from \"../utils/utils\";\r\nimport { API_BASE, COIN_TYPES } from \"../config/constants\";\r\n\r\nconst getWalletBalance = async (address, coinType=1) => {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { ...authHeader()}\r\n    };\r\n\r\n    const type = COIN_TYPES[coinType].toLowerCase();\r\n    const response = fetch(`${API_BASE}/web3/balance/${type}/${address}`, requestOptions)\r\n    return await handleResponse(response);\r\n}\r\n\r\nconst trackTransactions = async (address, coinAmount=0, coinType=1) => {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { ...authHeader(), 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ time: Date.now(), value: coinAmount })\r\n    };\r\n\r\n    const type = COIN_TYPES[coinType].toLowerCase();\r\n    const response = fetch(`${API_BASE}/web3/track/${type}/${address}`, requestOptions)\r\n    return await handleResponse(response);\r\n}\r\n\r\nexport const web3Service = {\r\n    getWalletBalance,\r\n    trackTransactions\r\n};\r\n"],"names":["Navbar","customSettingComponent","searchBar","searchKeyword","navigate","normalBar","disableRealestate","useNavigate","location","useLocation","useState","user","useSelector","selectUser","dispatch","useDispatch","selectNotifications","searchCategory","setSearchCategory","searchProduct","setSearchProduct","searchCustomer","setSearchCustomer","showBack","setShowBack","useEffect","pathname","className","as","onClick","icon","faCaretLeft","type","placeholder","value","onChange","e","target","onKeyUp","code","faUser","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","userproxy","length","username","businessname","active","setCurrentGroup","cleanCurOrders","children","showNavbar","navbarCustomSettingComponent","layoutClass","showNormal","noRealestate","classes","isModal","setIsModal","cartsLink","registerFlag","handleRegister","name","setName","handleConfirm","openSnackBar","message","status","appear","show","onClose","handleKeyEvent","cposOrdered","paymentID","selectWaitingPaymentID","getPaymentStatus","id","web3Service","coinType","btcwalpublic","walpublic","coinAmount","paymentedOrder","faClose","level","size","toFixed","COIN_TYPES","orders","selectCurOrders","orderCount","selectCurCount","products","selectProducts","vat","selectVAT","selectCoinType","customer","selectCustomer","customers","selectAllUsercustomers","subtotalCost","setSubTotalCost","cartsModal","setCartsModal","paymentModal","setPaymentModal","coinBTC","selectCoinAllowBTC","coinETH","selectCoinAllowETH","coinBNB","selectCoinAllowBNB","coinXRP","selectCoinAllowXRP","coinUSDT","selectCoinAllowUSDT","coinCPOS","selectCoinAllowCPOS","setCposOrdered","coinGecko","coinData","selectCoinData","discount","selectAllowDiscount","getProducts","cost","map","o","index","p","getProduct","productId","floatAdd","floatMul","price","amount","filter","_id","handleSave","getCoinAmount","order","merchantId","customerId","updateOrderData","scrollToGroup","currentGroup","getAllUsercustomerData","form_groups","sku","faMinus","addCurOrders","handleMinus","faPlus","handlePlus","SUPPORT_COINS","item","valid","getCoinValidate","setCoinType","href","COIN_EXPLORER_LINK","selectCurrentGroup","refs","reduce","acc","val","i","createRef","totalGroups","mode","current","scrollIntoView","behavior","block","inline","handleNextGroup","handlePrevGroup","c","setCustomer","ret","getSidebarTitle","form_group","ref","faTrash","faFloppyDisk","getHandleTitle","getWalletBalance","address","requestOptions","method","headers","authHeader","toLowerCase","response","fetch","API_BASE","handleResponse","trackTransactions","body","JSON","stringify","time","Date","now"],"sourceRoot":""}