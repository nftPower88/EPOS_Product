{"version":3,"file":"static/js/291.905ff418.chunk.js","mappings":"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","sources":["components/Navbar/index.jsx","components/Layout.jsx","pages/dashboard/merchant_group/modals/carts.modal.jsx","pages/dashboard/merchant_group/modals/waiting.payment.modal.jsx","pages/dashboard/sidebar.jsx","services/web3.service.js"],"sourcesContent":["import { Menu, Transition } from \"@headlessui/react\";\r\nimport { Fragment } from \"react\";\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretLeft, faUser } from '@fortawesome/free-solid-svg-icons'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { selectUser, updateTooltip } from '../../redux/userReducer';\r\nimport { API_URL } from '../../config/constants';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport Tooltip from 'react-power-tooltip';\r\nimport { getNotification, selectNotifications, updateNotification, updateNotificationShow } from '../../redux/notificationReducer';\r\nimport { cleanCurOrders, setCurrentGroup } from '../../redux/orderReducer';\r\n\r\nexport const Navbar = ({\r\n  customSettingComponent,\r\n  searchBar = true,\r\n  faqBtn = false,\r\n  searchKeyword = '',\r\n  normalBar = false,\r\n  disableRealestate = false,  \r\n  walletNav = true\r\n}) => {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [isMore, setIsMore] = useState(false);\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  const [keyword, setKeyword] = useState(searchKeyword);\r\n  const notifications = useSelector(selectNotifications);\r\n  const [searchCategory, setSearchCategory] = useState('');\r\n  const [searchProduct, setSearchProduct] = useState('');\r\n  const [searchCustomer, setSearchCustomer] = useState('');\r\n  const [showBack, setShowBack] = useState(true);\r\n\r\n  const onLogout = (e) => {\r\n    dispatch(setCurrentGroup(0));\r\n    dispatch(cleanCurOrders());\r\n    navigate('/logout');\r\n  }\r\n\r\n  const onEditProfile = (e) => {\r\n    navigate('/user/edit');\r\n  }\r\n\r\n  const handleBack = () => {\r\n    navigate(-1);\r\n  }\r\n\r\n  const handleGoFAQ = () => {\r\n    navigate('/faq');\r\n  }\r\n\r\n  const handleSearchCategory = (event) => {\r\n    if (event.code === 'Enter') {\r\n      navigate('/search/category/' + searchCategory);\r\n    }\r\n  }\r\n\r\n  const handleSearchProduct = (event) => {\r\n    if (event.code === 'Enter') {\r\n      navigate('/search/product/' + searchProduct);\r\n    }\r\n  }\r\n\r\n  const handleSearchCustomer = (event) => {\r\n    if (event.code === 'Enter' || event.code === 'NumpadEnter') {\r\n      navigate('/search/customer/' + searchCustomer);\r\n    }\r\n  }\r\n\r\n  const handleWallet = () => {\r\n    navigate('/wallet');\r\n  }\r\n\r\n  const handleSuper = async () => {\r\n    navigate('/admin/manager');\r\n  }\r\n\r\n  useEffect (() => {\r\n    if (location.pathname === \"/\") {\r\n      setShowBack(false)\r\n    } else {\r\n      setShowBack(true)\r\n    }\r\n  }, [location.pathname])\r\n\r\n  return (\r\n    <div className=\"navbar w-full\">\r\n      <div className=\"flex items-center w-full justify-between\">\r\n        {/* {user && user._id && */}\r\n        <>\r\n          <Menu as=\"div\" className=\"relative inline-block text-left nav-menu mr-5 mt-1\">\r\n            {showBack && <Menu.Button onClick={() => handleBack()} data-tip data-for=\"notificationId\" className=\"inline-flex w-full justify-center rounded-md text-sm text-gray-400 hover:text-gray-100\">\r\n              <FontAwesomeIcon icon={faCaretLeft} className=\"text-3xl\"/>\r\n            </Menu.Button>}\r\n            {faqBtn && <Menu.Button onClick={() => handleGoFAQ()} data-tip data-for=\"notificationId\" className=\"inline-flex w-[8rem] text-xl justify-center leading-[2.6rem] text-gray-100 border-b border-gray-100 hover:text-gray-400 hover:border-gray-400\">\r\n              FAQ\r\n            </Menu.Button>}\r\n          </Menu>\r\n\r\n          {searchBar && (\r\n            <>\r\n              <input \r\n                  className=\"appearance-none italic bg-transparent border-b border-gray-300 w-[25%] text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                  type=\"search\"\r\n                  placeholder='Search Category'\r\n                  value={searchCategory}\r\n                  onChange={(e) => setSearchCategory(e.target.value)}\r\n                  onKeyUp={(e) => handleSearchCategory(e)} />\r\n              <input \r\n                    className=\"appearance-none italic bg-transparent border-b border-gray-300 w-[25%] text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                    type=\"search\"\r\n                    placeholder='Search Product'\r\n                    value={searchProduct}\r\n                    onChange={(e) => setSearchProduct(e.target.value)}\r\n                    onKeyUp={(e) => handleSearchProduct(e)} />\r\n              <input \r\n                    className=\"appearance-none italic bg-transparent border-b border-gray-300 w-[25%] text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                    type=\"search\"\r\n                    placeholder='Search Customer'\r\n                    value={searchCustomer}\r\n                    onChange={(e) => setSearchCustomer(e.target.value)}\r\n                    onKeyUp={(e) => handleSearchCustomer(e)} />\r\n            </>\r\n          )}\r\n          \r\n          <Menu as=\"div\" className=\"relative inline-block text-left nav-menu mt-1\">\r\n            <Menu.Button className=\"inline-flex w-full justify-center rounded-md text-sm text-gray-400 hover:text-app-black\">\r\n              <FontAwesomeIcon icon={faUser} className=\"text-4xl\"/>\r\n            </Menu.Button>\r\n\r\n            <Transition\r\n              as={Fragment}\r\n              enter=\"transition ease-out duration-100\"\r\n              enterFrom=\"transform opacity-0 scale-95\"\r\n              enterTo=\"transform opacity-100 scale-100\"\r\n              leave=\"transition ease-in duration-75\"\r\n              leaveFrom=\"transform opacity-100 scale-100\"\r\n              leaveTo=\"transform opacity-0 scale-95\"\r\n            >\r\n              <Menu.Items className=\"absolute right-0 mt-2 w-56 origin-top-right divide-y divide-gray-100 rounded-sm bg-white shadow-lg ring-2 ring-gray-200 focus:outline-none z-10\">\r\n                <div className=\"px-1 py-1 \">\r\n                  {user && <div className=\"bg-[#606060] text-gray-100 py-2 text-center font-bold\">\r\n                    {(user.userproxy && user.userproxy.length > 0) ? user.userproxy[0].username : user.businessname}\r\n                  </div>}\r\n                  {walletNav && <Menu.Item>\r\n                    {({ active }) => (\r\n                      <button\r\n                        className={`${\r\n                          active ? \"bg-[#404040] text-white\" : \"text-gray-900\"\r\n                        } group  w-full items-center rounded-sm px-2 py-2 text-sm text-center`}\r\n                        onClick={()=>handleWallet()}\r\n                      >\r\n                        Wallet\r\n                        &nbsp;<i className=\"fa fa-right-from-backet\">&nbsp;</i>\r\n                      </button>\r\n                    )}\r\n                  </Menu.Item>}\r\n                  {(user && user.active && user.is_admin && user.is_allow && user.verified) && <Menu.Item>\r\n                    {({ active }) => (\r\n                      <button\r\n                        className={`${\r\n                          active ? \"bg-[#404040] text-white\" : \"text-gray-900\"\r\n                        } group  w-full items-center rounded-sm px-2 py-2 text-sm text-center`}\r\n                        onClick={()=>handleSuper()}\r\n                      >\r\n                        Super\r\n                        &nbsp;<i className=\"fa fa-right-from-backet\">&nbsp;</i>\r\n                      </button>\r\n                    )}\r\n                  </Menu.Item>}\r\n                  <Menu.Item>\r\n                    {({ active }) => (\r\n                      <button\r\n                        className={`${\r\n                          active ? \"bg-[#404040] text-white\" : \"text-gray-900\"\r\n                        } group  w-full items-center rounded-sm px-2 py-2 text-sm text-center`}\r\n                        onClick={(e) => onLogout(e)}\r\n                      >\r\n                        Logout\r\n                        &nbsp;<i className=\"fa fa-right-from-backet\">&nbsp;</i>\r\n                      </button>\r\n                    )}\r\n                  </Menu.Item>\r\n                </div>\r\n              </Menu.Items>\r\n            </Transition>\r\n          </Menu>\r\n        </>\r\n        {/* } */}\r\n      </div>\r\n    </div>\r\n  );\r\n};","import { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Navbar } from './Navbar';\r\n\r\nconst Layout = ({\r\n  children,\r\n  showNavbar = true,\r\n  navbarCustomSettingComponent,\r\n  layoutClass = 'bg-app-form-border',\r\n  searchBar,\r\n  searchKeyword,\r\n  showNormal = false,\r\n  noRealestate = false,\r\n  walletNav = true,\r\n  faqBtn = false,\r\n  classes = ''\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    // const init = async () => {\r\n    //   const queryOpts = { name: 'clipboard-read', allowWithoutGesture: false };\r\n    //   await navigator.permissions.query(queryOpts);\r\n    //   // Will be 'granted', 'denied' or 'prompt':\r\n    // }\r\n    // init();\r\n  }, [])\r\n  return (\r\n    <div className={`w-full min-h-screen bg-[#404040] ${layoutClass}`}>\r\n      {showNavbar && (\r\n        showNormal ? \r\n        <div className=\"px-6 md:px-10 lg:px-12 py-2\">\r\n          <Navbar normalBar={true} disableRealestate={noRealestate}/>\r\n        </div> :\r\n        <div className=\"px-6 md:px-10 lg:px-12 py-2\">\r\n          <Navbar\r\n            customSettingComponent={navbarCustomSettingComponent}\r\n            searchBar={searchBar}\r\n            searchKeyword={searchKeyword}\r\n            disableRealestate={noRealestate}\r\n            walletNav={walletNav}\r\n            faqBtn={faqBtn}\r\n          />\r\n        </div>\r\n      )}\r\n      <div className={`${classes}`}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Fragment, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { openSnackBar } from '../../../../redux/snackBarReducer';\r\n\r\nconst CartsModal = ({isModal, setIsModal, cartsLink, registerFlag, handleRegister}) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('')\r\n\r\n  const handleConfirm = () => {\r\n    if (name.length === 0) {\r\n      dispatch(openSnackBar({ message: \"Type saved order name.\", status: 'error' }));\r\n      return;\r\n    }\r\n\r\n    if (registerFlag) {\r\n      handleRegister(name);\r\n    } else {\r\n      navigate(cartsLink + '/' + name);\r\n    }\r\n    setIsModal(false);\r\n  }\r\n\r\n  const handleKeyEvent = (e) => {\r\n    if (e.code === 'Enter') {\r\n      handleConfirm();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isModal) {\r\n      setName('')\r\n    }\r\n  }, [isModal]);\r\n\r\n  return (\r\n    <Transition appear show={isModal} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        onClose={() => {}}\r\n        className=\"relative z-50\">\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\">\r\n          <div className=\"fixed inset-0 backdrop-blur-sm bg-[#FFFFFF44]\" aria-hidden=\"true\" />\r\n        </Transition.Child>\r\n        <div className=\"fixed inset-0 flex items-center bg-transparent justify-center \">\r\n          {/* The actual dialog panel  */}\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 scale-95\"\r\n            enterTo=\"opacity-100 scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 scale-100\"\r\n            leaveTo=\"opacity-0 scale-95\">\r\n            <Dialog.Panel className=\" max-w-full transform transition-all md:max-w-full\" onKeyUp={(e) => {if (e.code === 'Enter' || e.code === 'NumpadEnter') { handleConfirm()}} }>\r\n              <div className=\"relative bg-[#404040] w-[30vw] max-w-[1000px] min-w-[380px] min-h-[160px] rounded-[1rem] drop-shadow-md p-6 text-center shadow-xl\">                              \r\n                {/* TITLE */}\r\n                <div className=''>\r\n                  <h1 className='text-md text-left text-[#D9D9D9] select-none'>Enter a name for the saved order:</h1>\r\n                </div>\r\n                {/* CONTENTS */}\r\n                <div className=\"min-h-[2rem] pb-[0.5rem]\">\r\n                  <input \r\n                    className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    onKeyUp={(e) => handleKeyEvent(e)} />\r\n                </div>\r\n                {/* CONTROLS */}\r\n                <div className='absolute right-6 bottom-4'>\r\n                  <button \r\n                      className={`w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#404040] border border-[#D9D9D9] text-gray-100 mr-6`}            \r\n                      onClick={() => setIsModal(false)}\r\n                  >Cancel</button>\r\n                  <button \r\n                      className={`w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#D9D9D9] text-gray-800`}            \r\n                      onClick={() => handleConfirm()}\r\n                  >Confirm</button>\r\n                </div>         \r\n              </div>\r\n            </Dialog.Panel>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default CartsModal;","import { Fragment, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectUser } from '../../../../redux/userReducer';\r\nimport { QRCodeSVG } from 'qrcode.react';\r\nimport { paymentedOrder, selectWaitingPaymentID } from '../../../../redux/orderReducer';\r\nimport { ordersService } from '../../../../services/orders.service';\r\nimport { COIN_TYPES, API_BASE } from '../../../../config/constants';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faClose } from '@fortawesome/free-solid-svg-icons';\r\nimport { web3Service } from '../../../../services/web3.service';\r\nimport { sleep } from '../../../../utils/utils';\r\n\r\nconst WaitingPaymentModal = ({isModal, setIsModal, cposOrdered}) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');  \r\n  const user = useSelector(selectUser);\r\n  const paymentID = useSelector(selectWaitingPaymentID);\r\n\r\n  const handlePaymentCompleted = (id) => {   \r\n    dispatch(paymentedOrder(id));\r\n  }\r\n\r\n  const getPaymentStatus = async (id, handle) => {\r\n    const ret = await web3Service.trackTransactions(cposOrdered.coinType === 0 ? user.btcwalpublic:user.walpublic, cposOrdered.coinAmount, cposOrdered.coinType);\r\n    if (ret.status === 'success') {\r\n      handlePaymentCompleted(id);\r\n      setIsModal(false); \r\n      clearInterval(handle);\r\n    }\r\n  }\r\n\r\n  useEffect (() => {\r\n    if (isModal && paymentID != 0) {\r\n      const handle = setInterval(() => {\r\n        if (isModal) {\r\n          getPaymentStatus(paymentID, handle);\r\n        } else {\r\n          clearInterval(handle)\r\n        }\r\n      }, 5000);\r\n      return () => clearInterval(handle);\r\n    }\r\n  }, [isModal, paymentID])\r\n\r\n  return (\r\n    <Transition appear show={isModal} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        onClose={() => {}}\r\n        className=\"relative z-50\">\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\">\r\n          <div className=\"fixed inset-0 backdrop-blur-sm bg-[#FFFFFF44]\" aria-hidden=\"true\" />\r\n        </Transition.Child>\r\n        <div className=\"fixed inset-0 flex items-center bg-transparent justify-center \">\r\n          {/* The actual dialog panel  */}\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 scale-95\"\r\n            enterTo=\"opacity-100 scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 scale-100\"\r\n            leaveTo=\"opacity-0 scale-95\">\r\n            <Dialog.Panel className=\" max-w-full transform transition-all md:max-w-full\">\r\n              <div className=\"relative bg-[#404040] w-[30vw] max-w-[1000px] min-w-[380px] min-h-[160px] rounded-[1rem] drop-shadow-md p-6 text-center shadow-xl\">                              \r\n                {/* TITLE */}  \r\n                <div className='flex justify-between items-center'>\r\n                  <h1 className='text-md text-left text-[#D9D9D9] select-none'>Waiting for payment:</h1>\r\n                  <FontAwesomeIcon icon={faClose} className='cursor-pointer' onClick={() => setIsModal(false)}/>\r\n                </div>  \r\n                {/* CONTENTS */}\r\n                <div className=\"min-h-[2rem] py-[1rem] flex justify-center mb-[1rem]\">\r\n                  <QRCodeSVG \r\n                      value={user ? user.walpublic : '0x0000000000'}\r\n                      level=\"H\"\r\n                      size={256}\r\n                  />                  \r\n                </div>\r\n                {/* CONTROLS */}\r\n                <div className='absolute right-6 bottom-4'>\r\n                  {cposOrdered.coinAmount && <h1 className='text-md text-left text-[#D9D9D9] select-none'>Amount: {cposOrdered.coinAmount.toFixed(8)} {COIN_TYPES[cposOrdered.coinType]}</h1>}\r\n                </div>  \r\n              </div>\r\n            </Dialog.Panel>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default WaitingPaymentModal;","import {useState, useEffect, createRef, Fragment} from 'react';\r\nimport { selectUser } from '../../redux/userReducer';\r\nimport { selectCurOrders, selectCurCount, selectCoinType, addCurOrders, cleanCurOrders, selectVAT, setVAT, setCoinType, selectCurrentGroup, setCurrentGroup } from '../../redux/orderReducer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faFloppyDisk, faMinus, faPlus, faCaretLeft, faUser, faPercent } from '@fortawesome/free-solid-svg-icons';\r\nimport { selectProducts, getProducts } from '../../redux/productReducer';\r\nimport { floatAdd, floatMul, getCoinAmount } from '../../utils/utils';\r\n// import ReactTooltip from \"react-tooltip\";\r\nimport { SUPPORT_COINS } from \"../../config/constants\";\r\nimport { QRCodeSVG } from 'qrcode.react';\r\n// import { Link } from 'react-router-dom';\r\nimport { openSnackBar } from '../../redux/snackBarReducer';\r\nimport { selectCustomer, updateOrderData, setCustomer } from '../../redux/orderReducer';\r\nimport { selectAllUsercustomers, getAllUsercustomerData } from '../../redux/userReducer';\r\nimport CartsModal from './merchant_group/modals/carts.modal';\r\nimport { COIN_EXPLORER_LINK } from '../../config/constants';\r\nimport {\r\n    selectCoinAllowBTC,\r\n    selectCoinAllowETH,\r\n    selectCoinAllowBNB,\r\n    selectCoinAllowXRP,\r\n    selectCoinAllowUSDT,\r\n    selectCoinAllowCPOS,\r\n    selectAllowDiscount\r\n} from '../../redux/settingReducer';\r\nimport WaitingPaymentModal from './merchant_group/modals/waiting.payment.modal';\r\nimport { selectCoinData } from '../../redux/web3Reducer';\r\nimport { Menu, Transition } from \"@headlessui/react\";\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n  const orders = useSelector(selectCurOrders);\r\n  const orderCount = useSelector(selectCurCount);\r\n  const products = useSelector(selectProducts);\r\n  const vat = useSelector(selectVAT);\r\n  const coinType = useSelector(selectCoinType);\r\n  const customer = useSelector(selectCustomer);\r\n  const customers = useSelector(selectAllUsercustomers);\r\n  const [subtotalCost, setSubTotalCost] = useState(0);\r\n  const [cartsModal, setCartsModal] = useState(false);\r\n  const [paymentModal, setPaymentModal] = useState(false);\r\n  const coinBTC = useSelector(selectCoinAllowBTC);\r\n  const coinETH = useSelector(selectCoinAllowETH);\r\n  const coinBNB = useSelector(selectCoinAllowBNB);\r\n  const coinXRP = useSelector(selectCoinAllowXRP);\r\n  const coinUSDT = useSelector(selectCoinAllowUSDT);\r\n  const coinCPOS = useSelector(selectCoinAllowCPOS);\r\n  const [cposOrdered, setCposOrdered] = useState({});\r\n  const [coinGecko, setCoinGecko] = useState(false);\r\n  const coinData = useSelector(selectCoinData);\r\n  const discount = useSelector(selectAllowDiscount);\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let cost = 0;\r\n    orders.map((o, index) => {\r\n        const p = getProduct(o.productId);\r\n        cost = floatAdd(cost, floatMul(p.price, o.amount));\r\n    });\r\n    setSubTotalCost(cost);\r\n    \r\n  }, [orderCount])\r\n\r\n  const getProduct = (id) => {\r\n    const p = products.filter((e) => e._id === id);\r\n    return p[0];\r\n  }\r\n\r\n  const handleMinus = (p) => {\r\n    const order = {\r\n        productId: p._id,\r\n        amount: -1\r\n    }\r\n    dispatch(addCurOrders(order));\r\n  }\r\n\r\n  const handlePlus = (p) => {\r\n    const order = {\r\n        productId: p._id,\r\n        amount: 1\r\n    }\r\n    dispatch(addCurOrders(order));\r\n  }\r\n\r\n  const handleClear = () => {\r\n    scrollToGroup(0);\r\n    dispatch(cleanCurOrders());\r\n  }\r\n\r\n  const handleSave = async (name) => {\r\n    const coinAmount = await getCoinAmount(coinType, subtotalCost, vat, coinData, discount);\r\n    const order = {\r\n        name: name,\r\n        merchantId: user._id,\r\n        customerId: customer ? customer._id:'000000000000000000000000',\r\n        order: orders,\r\n        coinType: coinType,\r\n        coinAmount: coinAmount\r\n    };\r\n    dispatch(updateOrderData(0, order));\r\n    scrollToGroup(0);\r\n    dispatch(cleanCurOrders());\r\n  }\r\n\r\n  const handleCoinType = (type) => {\r\n    dispatch(setCoinType(type));\r\n  }\r\n\r\n  const getCoinValidate = (index) => {\r\n      let valid = false;\r\n      switch (index) {\r\n          case 0:\r\n              valid = coinBTC;\r\n              break;\r\n          case 1:\r\n              valid = coinETH;\r\n              break;\r\n          case 2:\r\n              valid = coinBNB;\r\n              break;\r\n          case 3:\r\n              valid = coinXRP;\r\n              break;\r\n          case 4:\r\n              valid = coinUSDT;\r\n              break;\r\n          case 5:\r\n              valid = coinCPOS;\r\n              break;\r\n      }\r\n\r\n      return valid;\r\n  }\r\n\r\n  useEffect(() => {\r\n    scrollToGroup(currentGroup, false);\r\n  }, [])\r\n\r\n  useEffect( () => {\r\n    dispatch(getAllUsercustomerData());\r\n  }, [])\r\n\r\n  const form_groups = [\r\n    <div key={1} className='w-full h-full overflow-x-auto text-[#404040]'>\r\n        {\r\n            orders.map((o, index) => {\r\n                const p = getProduct(o.productId);\r\n                return (\r\n                    <div key={index} className=\"border-b border-gray-900 py-4\">    \r\n                        <div className='flex justify-between text-md'>\r\n                            <div>{p.name}</div>\r\n                            <div>{p.price.toFixed(2)}</div>\r\n                        </div>\r\n                        <div className='flex justify-between text-sm'>\r\n                            <div>SKU: {p.sku}</div>\r\n                            <div className='flex justify-center items-center'>\r\n                                <FontAwesomeIcon \r\n                                    icon={faMinus}\r\n                                    className=\"cursor-pointer\"\r\n                                    onClick={()=>handleMinus(p)}\r\n                                />\r\n                                <p className='px-2 select-none'>{o.amount}</p>\r\n                                <FontAwesomeIcon \r\n                                    icon={faPlus} \r\n                                    className=\"cursor-pointer\"\r\n                                    onClick={()=>handlePlus(p)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n    </div>,\r\n    <div key={2} className='w-full h-full grid grid-cols-2 gap-2 text-center py-[2rem] px-[2rem]'>\r\n        {\r\n            SUPPORT_COINS.map((item, index) => {\r\n                const valid = getCoinValidate(index)\r\n                return (\r\n                valid ? <div key={index} onClick={() => handleCoinType(index)} className={`w-[8rem] h-[8rem] flex justify-center items-center ${coinType === index ? 'bg-[#B9B9B9]':''} border border-[#404040] text-[#404040] rounded-[1rem] select-none cursor-pointer`}>\r\n                    <p className='w-[60%]'>{item}</p>\r\n                </div> : null\r\n                )\r\n            })\r\n        }\r\n    </div>,\r\n    <div key={3} className='w-full h-full'>\r\n        <div className='w-full h-[5rem]'>            \r\n        </div>\r\n        <div className='w-full flex justify-center'>            \r\n            <QRCodeSVG \r\n                value={user ? user.walpublic : '0x0000000000'}\r\n                level=\"H\"\r\n                size={256}\r\n            />\r\n        </div>\r\n        <div className='w-full text-center'>\r\n            <p className='text-red-600 text-md my-[1rem]'>Please ensure block is confirmed before parting with goods/rendering services.</p>\r\n            {user && <p className='text-[#404040] font-bold text-md my-[1rem]'>Check status of transaction here: <a href={`${COIN_EXPLORER_LINK[coinType]}${user.walpublic}`}>{`${COIN_EXPLORER_LINK[coinType]}${user.walpublic}`}</a></p>}\r\n        </div>\r\n    </div>\r\n  ]\r\n\r\n  const currentGroup = useSelector(selectCurrentGroup);\r\n\r\n  const refs = form_groups.reduce((acc, val, i) => {\r\n    acc[i] = createRef();\r\n    return acc;\r\n  }, {});\r\n\r\n  const totalGroups = form_groups.length;\r\n  const scrollToGroup = (i, mode=true) => {\r\n    dispatch(setCurrentGroup(i));\r\n    refs[i].current.scrollIntoView({\r\n      behavior: mode ? 'smooth':'instant',\r\n      block: 'nearest',\r\n      inline: 'start',\r\n    });\r\n  };\r\n  const nextGroup = () => {\r\n    if (currentGroup >= totalGroups - 1) {\r\n      scrollToGroup(0);\r\n      return;\r\n    } else {\r\n      scrollToGroup(currentGroup + 1);\r\n    }\r\n  };\r\n  \r\n  const previousGroup = () => {\r\n    if (currentGroup === 0) {\r\n      scrollToGroup(totalGroups - 1);\r\n      return;\r\n    } else {\r\n      scrollToGroup(currentGroup - 1);\r\n    }\r\n  };\r\n\r\n  const handleNextGroup = async () => {\r\n    if (currentGroup === 0) {\r\n        if (orders.length === 0) {\r\n            dispatch(openSnackBar({ message: \"Empty orders.\", status: 'error' }));\r\n            return;\r\n        }\r\n        // if (!customer) {\r\n        //     dispatch(openSnackBar({ message: \"Select customer.\", status: 'error' }));\r\n        //     return;\r\n        // }\r\n    }\r\n    if (currentGroup === 2) {\r\n        /// waiting receive payment\r\n        const coinAmount = await getCoinAmount(coinType, subtotalCost, vat, coinData, discount);\r\n        const order = {\r\n            name: \"cpos_ordered\",\r\n            merchantId: user._id,\r\n            customerId: customer ? customer._id: '000000000000000000000000',\r\n            order: orders,\r\n            coinType: coinType,\r\n            coinAmount: coinAmount,\r\n            waiting: true\r\n        };\r\n        setCposOrdered(order);\r\n        setPaymentModal(true);\r\n        dispatch(updateOrderData(0, order));\r\n        dispatch(cleanCurOrders());\r\n    }\r\n\r\n    nextGroup();\r\n  }\r\n\r\n  const handlePrevGroup = () => {\r\n    previousGroup();\r\n  }\r\n\r\n  const getHandleTitle = () => {\r\n    let ret = \"\";\r\n    switch (currentGroup) {\r\n        case 0:\r\n            ret = \"Checkout\"\r\n            break;\r\n        case 1:\r\n            ret = \"Generate QR\"\r\n            break;\r\n        case 2:\r\n            ret = \"Complete Order\"\r\n            break;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  const getSidebarTitle = () => {\r\n    let ret = \"\";\r\n    switch (currentGroup) {\r\n        case 0:\r\n            ret = customer ? customer.name : '';\r\n            break;\r\n        case 1:\r\n            ret = \"Select crypto:\"\r\n            break;\r\n        case 2:\r\n            ret = \"Customer to scan QR to complete order:\"\r\n            break;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  return (\r\n    <div className='bg-[#D9D9D9] h-[calc(100vh-80px)] w-[0px] sm:w-[360px] md:w-[360px] lg:w-[360px] xl:w-[360px] transition-all'>\r\n        <div className='w-full h-full relative'>\r\n            <div className='w-full h-[2rem] flex items-center text-[#404040]'>\r\n                {currentGroup!==0 && <button \r\n                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] text-[#404040]`}\r\n                    onClick={() => handlePrevGroup()}\r\n                ><FontAwesomeIcon icon={faCaretLeft}/></button>}\r\n                {/* {currentGroup===0 && <button \r\n                    className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] text-[#404040]`}\r\n                ><FontAwesomeIcon icon={faUser}/></button>} */}\r\n                <Menu as=\"div\" className=\"relative inline-block text-left nav-menu mt-1\">\r\n                    <Menu.Button className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] text-[#404040]`}>\r\n                        <FontAwesomeIcon icon={faUser}/>\r\n                    </Menu.Button>\r\n\r\n                    {(customers && customers.length > 0) && <Transition\r\n                        as={Fragment}\r\n                        enter=\"transition ease-out duration-100\"\r\n                        enterFrom=\"transform opacity-0 scale-95\"\r\n                        enterTo=\"transform opacity-100 scale-100\"\r\n                        leave=\"transition ease-in duration-75\"\r\n                        leaveFrom=\"transform opacity-100 scale-100\"\r\n                        leaveTo=\"transform opacity-0 scale-95\"\r\n                        >\r\n                        <Menu.Items className=\"absolute right-0 mt-2 w-56 origin-top-right divide-y divide-gray-100 rounded-sm bg-white shadow-lg ring-2 ring-gray-200 focus:outline-none z-10\">\r\n                            <div className=\"px-1 py-1\">  \r\n                                {\r\n                                    customers.map((c, index) => {\r\n                                        return (\r\n                                            <Menu.Item key={index}>\r\n                                                {({ active }) => (\r\n                                                <button\r\n                                                    className={`${\r\n                                                    active ? \"bg-[#404040] text-white\" : \"text-gray-900\"\r\n                                                    } group  w-full items-center rounded-sm px-2 py-2 text-sm text-center`}\r\n                                                    onClick={()=>dispatch(setCustomer(c))}\r\n                                                >\r\n                                                    {c.name}\r\n                                                    &nbsp;<i className=\"fa fa-right-from-backet\">&nbsp;</i>\r\n                                                </button>\r\n                                                )}\r\n                                            </Menu.Item>\r\n                                        );\r\n                                    })\r\n                                }   \r\n                            </div>\r\n                        </Menu.Items>\r\n                    </Transition>}\r\n                </Menu>\r\n                <p>{getSidebarTitle()}</p>\r\n            </div>\r\n            <div className='w-full h-[68vh] px-4'>\r\n                <div className='relative w-full h-full'>\r\n                    <div className=\"carousel w-full h-full\">\r\n                        {form_groups.map((form_group, i) => {\r\n                            return (\r\n                            <div className='w-full h-full flex-shrink-0' key={i} ref={refs[i]}>  \r\n                                {form_group} \r\n                            </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='w-full absolute bottom-0 px-6 py-2 text-[#404040]'>\r\n                <div className='flex justify-between'>\r\n                    <p>Subtotal</p>\r\n                    <p>{subtotalCost.toFixed(2)}</p>                    \r\n                </div>\r\n                <div className='flex justify-between'>\r\n                    <p>Discount {`${vat > 0 ? '(' + floatMul(vat, 100) + '%)' : ''}`}</p>\r\n                    <p>{floatMul(subtotalCost, vat).toFixed(2)}</p>\r\n                </div>\r\n                <div className='flex justify-between font-bold'>\r\n                    <p>Total</p>\r\n                    <p>{floatAdd(subtotalCost, floatMul(subtotalCost, -vat)).toFixed(2)}</p>\r\n                </div>\r\n                <div className='flex justify-between mt-2'>\r\n                    <div className='flex justify-between gap-2'>                        \r\n                        <button \r\n                            className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}\r\n                            onClick={() => handleClear()}\r\n                        ><FontAwesomeIcon icon={faTrash}/></button>\r\n                        <button \r\n                            className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}            \r\n                            onClick={() => {                                \r\n                                if (orders.length === 0) {\r\n                                    dispatch(openSnackBar({ message: \"Empty orders.\", status: 'error' }));\r\n                                    return;\r\n                                }\r\n                                // if (!customer) {\r\n                                //     dispatch(openSnackBar({ message: \"Select customer.\", status: 'error' }));\r\n                                //     return;\r\n                                // }\r\n                                setCartsModal(true);\r\n                            }}\r\n                        ><FontAwesomeIcon icon={faFloppyDisk}/></button>\r\n                        { currentGroup === 0 && <Menu as=\"div\" className=\"relative inline-block text-left nav-menu\">\r\n                            <Menu.Button className={`w-[2rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}>\r\n                                <FontAwesomeIcon icon={faPercent}/>\r\n                            </Menu.Button>\r\n\r\n                            <Transition\r\n                                as={Fragment}\r\n                                enter=\"transition ease-out duration-100\"\r\n                                enterFrom=\"transform opacity-0 scale-95\"\r\n                                enterTo=\"transform opacity-100 scale-100\"\r\n                                leave=\"transition ease-in duration-75\"\r\n                                leaveFrom=\"transform opacity-100 scale-100\"\r\n                                leaveTo=\"transform opacity-0 scale-95\"\r\n                                >\r\n                                <Menu.Items className=\"-top-4 transform -translate-y-full absolute right-0 mt-2 w-[8rem] origin-top-right divide-y divide-gray-100 rounded-md bg-[#404040] focus:outline-none z-10\">\r\n                                    <div className=\"px-2 py-2 grid grid-cols-3 gap-2\">  \r\n                                        <Menu.Item>\r\n                                            <button\r\n                                                className={`${\r\n                                                vat === 0.05 ? \"bg-[#6A6A6A] text-white\" : \"bg-[#D9D9D9] text-gray-900\"\r\n                                                } w-[2rem] h-[2rem] text-md text-center rounded-[6px] leading-[2rem] text-gray-100 px-auto`}\r\n                                                onClick={() => dispatch(setVAT(0.05))}\r\n                                            >\r\n                                                <p>5%</p>\r\n                                                &nbsp;<i className=\"fa fa-right-from-backet\">&nbsp;</i>\r\n                                            </button>\r\n                                        </Menu.Item>\r\n                                        <Menu.Item>\r\n                                            <button\r\n                                                className={`${\r\n                                                vat === 0.1 ? \"bg-[#6A6A6A] text-white\" : \"bg-[#D9D9D9] text-gray-900\"\r\n                                                } w-[2rem] h-[2rem] text-md text-center rounded-[6px] leading-[2rem] text-gray-100 px-auto`}\r\n                                                onClick={() => dispatch(setVAT(0.1))}\r\n                                            >\r\n                                                <p>10%</p>\r\n                                                &nbsp;<i className=\"fa fa-right-from-backet\">&nbsp;</i>\r\n                                            </button>\r\n                                        </Menu.Item>\r\n                                        <Menu.Item>\r\n                                            <button\r\n                                                className={`${\r\n                                                vat === 0.15 ? \"bg-[#6A6A6A] text-white\" : \"bg-[#D9D9D9] text-gray-900\"\r\n                                                } w-[2rem] h-[2rem] text-md text-center rounded-[6px] leading-[2rem] text-gray-100 px-auto`}\r\n                                                onClick={() => dispatch(setVAT(0.15))}\r\n                                            >\r\n                                                <p>15%</p>\r\n                                                &nbsp;<i className=\"fa fa-right-from-backet\">&nbsp;</i>\r\n                                            </button>\r\n                                        </Menu.Item>\r\n                                        <Menu.Item>\r\n                                            <button\r\n                                                className={`${\r\n                                                vat === 0.2 ? \"bg-[#6A6A6A] text-white\" : \"bg-[#D9D9D9] text-gray-900\"\r\n                                                } w-[2rem] h-[2rem] text-md text-center rounded-[6px] leading-[2rem] text-gray-100 px-auto`}\r\n                                                onClick={() => dispatch(setVAT(0.2))}\r\n                                            >\r\n                                                <p>20%</p>\r\n                                                &nbsp;<i className=\"fa fa-right-from-backet\">&nbsp;</i>\r\n                                            </button>\r\n                                        </Menu.Item>\r\n                                        <Menu.Item>\r\n                                            <button\r\n                                                className={`${\r\n                                                vat === 0.25 ? \"bg-[#6A6A6A] text-white\" : \"bg-[#D9D9D9] text-gray-900\"\r\n                                                } w-[2rem] h-[2rem] text-md text-center rounded-[6px] leading-[2rem] text-gray-100 px-auto`}\r\n                                                onClick={() => dispatch(setVAT(0.25))}\r\n                                            >\r\n                                                <p>25%</p>\r\n                                                &nbsp;<i className=\"fa fa-right-from-backet\">&nbsp;</i>\r\n                                            </button>\r\n                                        </Menu.Item>\r\n                                        <Menu.Item>\r\n                                            <button\r\n                                                className={`${\r\n                                                vat === 0.0 ? \"bg-[#6A6A6A] text-white\" : \"bg-[#D9D9D9] text-gray-900\"\r\n                                                } w-[2rem] h-[2rem] text-[0.6rem] text-center rounded-[6px] leading-[2rem] text-gray-100 px-auto`}\r\n                                                onClick={() => dispatch(setVAT(0.0))}\r\n                                            >\r\n                                                <p>Clean</p>\r\n                                                &nbsp;<i className=\"fa fa-right-from-backet\">&nbsp;</i>\r\n                                            </button>\r\n                                        </Menu.Item>\r\n                                    </div>\r\n                                </Menu.Items>\r\n                            </Transition>\r\n                        </Menu>}                        \r\n                    </div>\r\n                    <button \r\n                        className={`w-[9rem] h-[2rem] text-md rounded-[6px] leading-[2rem] bg-[#404040] text-gray-100`}  \r\n                        onClick={() => handleNextGroup()}          \r\n                    >{coinGecko ? 'Calculating' : getHandleTitle()}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <CartsModal isModal={cartsModal} setIsModal={setCartsModal} registerFlag={true} handleRegister={handleSave}/>\r\n        <WaitingPaymentModal isModal={paymentModal} setIsModal={setPaymentModal} cposOrdered={cposOrdered}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import { authHeader, handleResponse } from \"../utils/utils\";\r\nimport { API_BASE, COIN_TYPES } from \"../config/constants\";\r\n\r\nconst getWalletBalance = async (address, coinType=1) => {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { ...authHeader()}\r\n    };\r\n\r\n    const type = COIN_TYPES[coinType].toLowerCase();\r\n    const response = fetch(`${API_BASE}/web3/balance/${type}/${address}`, requestOptions)\r\n    return await handleResponse(response);\r\n}\r\n\r\nconst trackTransactions = async (address, coinAmount=0, coinType=1) => {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { ...authHeader(), 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ time: Date.now(), value: coinAmount })\r\n    };\r\n\r\n    const type = COIN_TYPES[coinType].toLowerCase();\r\n    const response = fetch(`${API_BASE}/web3/track/${type}/${address}`, requestOptions)\r\n    return await handleResponse(response);\r\n}\r\n\r\nexport const web3Service = {\r\n    getWalletBalance,\r\n    trackTransactions\r\n};\r\n"],"names":["Navbar","customSettingComponent","searchBar","faqBtn","searchKeyword","normalBar","disableRealestate","walletNav","navigate","useNavigate","location","useLocation","useState","user","useSelector","selectUser","dispatch","useDispatch","selectNotifications","searchCategory","setSearchCategory","searchProduct","setSearchProduct","searchCustomer","setSearchCustomer","showBack","setShowBack","handleSuper","useEffect","pathname","className","as","onClick","icon","faCaretLeft","type","placeholder","value","onChange","e","target","onKeyUp","code","event","faUser","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","userproxy","length","username","businessname","active","is_admin","is_allow","verified","setCurrentGroup","cleanCurOrders","children","showNavbar","navbarCustomSettingComponent","layoutClass","showNormal","noRealestate","classes","isModal","setIsModal","cartsLink","registerFlag","handleRegister","name","setName","handleConfirm","openSnackBar","message","status","appear","show","onClose","handleKeyEvent","cposOrdered","paymentID","selectWaitingPaymentID","handlePaymentCompleted","id","paymentedOrder","getPaymentStatus","handle","web3Service","coinType","btcwalpublic","walpublic","coinAmount","clearInterval","setInterval","faClose","level","size","toFixed","COIN_TYPES","orders","selectCurOrders","orderCount","selectCurCount","products","selectProducts","vat","selectVAT","selectCoinType","customer","selectCustomer","customers","selectAllUsercustomers","subtotalCost","setSubTotalCost","cartsModal","setCartsModal","paymentModal","setPaymentModal","coinBTC","selectCoinAllowBTC","coinETH","selectCoinAllowETH","coinBNB","selectCoinAllowBNB","coinXRP","selectCoinAllowXRP","coinUSDT","selectCoinAllowUSDT","coinCPOS","selectCoinAllowCPOS","setCposOrdered","coinGecko","coinData","selectCoinData","discount","selectAllowDiscount","getProducts","cost","map","o","index","p","getProduct","productId","floatAdd","floatMul","price","amount","filter","_id","handleSave","getCoinAmount","order","merchantId","customerId","updateOrderData","scrollToGroup","currentGroup","getAllUsercustomerData","form_groups","sku","faMinus","addCurOrders","handleMinus","faPlus","handlePlus","SUPPORT_COINS","item","valid","getCoinValidate","setCoinType","href","COIN_EXPLORER_LINK","selectCurrentGroup","refs","reduce","acc","val","i","createRef","totalGroups","mode","current","scrollIntoView","behavior","block","inline","handleNextGroup","waiting","handlePrevGroup","c","setCustomer","ret","getSidebarTitle","form_group","ref","faTrash","faFloppyDisk","faPercent","setVAT","getHandleTitle","getWalletBalance","address","requestOptions","method","headers","authHeader","toLowerCase","response","fetch","API_BASE","handleResponse","trackTransactions","body","JSON","stringify","time","Date","now"],"sourceRoot":""}