{"version":3,"file":"static/js/620.5235e7e1.chunk.js","mappings":"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","sources":["pages/auth/success.modal.jsx","pages/dashboard/customer.jsx","pages/admin_modals/withdraw.modal.jsx","pages/dashboard/wallet.jsx"],"sourcesContent":["import { Fragment, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport confirm from '../../asset/register/confirm.png';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registerSuccess, selectRegisterSuccess } from '../../redux/authReducer';\r\n\r\nconst SuccessModal = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const successed = useSelector(selectRegisterSuccess);\r\n\r\n  return (\r\n    <Transition appear show={successed} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        onClose={() => {}}\r\n        className=\"relative z-50\">\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\">\r\n          <div className=\"fixed inset-0 backdrop-blur-sm bg-[#FFFFFF44]\" aria-hidden=\"true\" />\r\n        </Transition.Child>\r\n        <div className=\"fixed inset-0 flex items-center bg-transparent justify-center \">\r\n          {/* The actual dialog panel  */}\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 scale-95\"\r\n            enterTo=\"opacity-100 scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 scale-100\"\r\n            leaveTo=\"opacity-0 scale-95\">\r\n            <Dialog.Panel className=\" max-w-full transform transition-all md:max-w-full\">\r\n              <div className=\"relative bg-[#404040] w-[50vw] max-w-[1000px] min-w-[380px] min-h-[460px] rounded-[1rem] drop-shadow-md p-6 text-center shadow-xl\">                              \r\n                {/* TITLE */}\r\n                <div className=''>\r\n                  <h1 className='text-2xl font-bold uppercase text-[#D9D9D9] select-none'>REGISTRATION COMPLETE!</h1>\r\n                </div>\r\n                {/* CONTENTS */}\r\n                <div className=\"min-h-[310px] my-[1rem] py-[1rem]\">\r\n                  <h1 className='text-4xl font-bold uppercase text-[#D9D9D9] select-none'>WELCOME!</h1>\r\n                  <img src={confirm} alt=\"confirm\" className='mx-auto h-[210px] mt-6'/>\r\n                </div>\r\n                {/* CONTROLS */}\r\n                <div className='flex justify-center'>\r\n                  <div \r\n                    className=\"bg-[#802BB1] hover:bg-[#943FC5] hover:drop-shadow-lg select-none text-center text-xl text-white uppercase px-8 leading-[3rem] rounded-[2rem] cursor-pointer\"\r\n                    onClick={() => {dispatch(registerSuccess(false));}}\r\n                    >\r\n                    Go To Dashboard\r\n                  </div>\r\n                </div>         \r\n              </div>\r\n            </Dialog.Panel>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default SuccessModal;","import Layout from '../../components/Layout';\r\nimport SuccessModal from '../auth/success.modal';\r\nimport Sidebar from './sidebar';\r\nimport Wallet from './wallet';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUserRole } from '../../redux/userReducer';\r\n\r\nconst Dashboard_Customer = () => {\r\n  const userRole = useSelector(selectUserRole);\r\n\r\n  return (\r\n    <>\r\n    {/* <Layout classes={'bg-[#F5F5F5] h-full'} searchBar={false}>\r\n        <div className='flex flex-cols relative'>\r\n            <Sidebar />\r\n        </div>        \r\n        <SuccessModal />\r\n    </Layout> */}\r\n    {userRole === 'customer' ? <Wallet searchBar={false} homeBtn={false} walletNav={false} faqBtn={true}/> : <></>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard_Customer;","import { Fragment, useState, useEffect } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { openSnackBar } from '../../redux/snackBarReducer';\r\nimport { web3Service } from '../../services/web3.service';\r\nimport { selectUser } from '../../redux/userReducer';\r\nimport { ethers } from \"ethers\"\r\n\r\nconst AdminWithdrawModal = ({isModal, setIsModal, walletBalance, coinType}) => {\r\n  // const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const seluser = useSelector(selectUser);\r\n  const [address, setAddress] = useState('');\r\n  const [balance, setBalance] = useState(0);\r\n  const [processing, setProcessing] = useState(false);\r\n\r\n  const checkWithdrawValidation = (index) => {\r\n    const ret = {message: \"\", status: false};\r\n    if (address.length === 0) {ret.message = \"Please input receipt address.\"; ret.status = false;}\r\n    else if (!ethers.utils.isAddress(address)) {ret.message = \"Should be available receipt address.\"; ret.status = false;}\r\n    else if (balance === 0) {ret.message = \"Withdraw ammount could not be zero.\"; ret.status = false;}\r\n    else if (balance < 0) {ret.message = \"Withdraw ammount could not be negative value.\"; ret.status = false;}\r\n    else if (balance > walletBalance) {ret.message = `Withdraw ammount could not be greater than ${walletBalance}.`; ret.status = false;}\r\n    else { ret.message = \"\"; ret.status = true;}\r\n\r\n    return ret;\r\n  }\r\n\r\n  const handleConfirm = async () => {\r\n    const checking = checkWithdrawValidation();\r\n    if (!checking.status) {\r\n      dispatch(openSnackBar({ message: checking.message, status: 'error' }));  \r\n      return;\r\n    }\r\n\r\n    setProcessing(true);\r\n    const ret = await web3Service.sendTransactions(address, balance, coinType, seluser._id);\r\n    if (ret.status === 'success') {\r\n      dispatch(openSnackBar({ message: `Successed withdraw to ${address}`, status: 'success'}))\r\n    } else {\r\n      dispatch(openSnackBar({ message: `Failed withdraw to ${address}`, status: 'error'}))\r\n    }\r\n    setProcessing(false);\r\n\r\n    setIsModal(false);\r\n  }\r\n\r\n  const handleMaxBalance = () => {\r\n    setBalance(walletBalance);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isModal) {\r\n      setAddress('');\r\n      setBalance(0);\r\n    }\r\n  }, [isModal])\r\n\r\n  return (\r\n    <Transition appear show={isModal} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        onClose={() => {}}\r\n        className=\"relative z-50\">\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\">\r\n          <div className=\"fixed inset-0 backdrop-blur-sm bg-[#FFFFFF44]\" aria-hidden=\"true\" />\r\n        </Transition.Child>\r\n        <div className=\"fixed inset-0 flex items-center bg-transparent justify-center \">\r\n          {/* The actual dialog panel  */}\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 scale-95\"\r\n            enterTo=\"opacity-100 scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 scale-100\"\r\n            leaveTo=\"opacity-0 scale-95\">\r\n            <Dialog.Panel className=\" max-w-full transform transition-all md:max-w-full\" onKeyUp={(e) => {if (e.code === 'Enter' || e.code === 'NumpadEnter') { handleConfirm()}} }>\r\n              <div className=\"relative bg-[#404040] w-[30vw] max-w-[1000px] min-w-[380px] min-h-[160px] rounded-[1rem] drop-shadow-md p-6 text-center shadow-xl\">                              \r\n                {/* TITLE */}\r\n                <div className=''>\r\n                  <h1 className='text-xl font-bold text-left text-[#D9D9D9] select-none'>Withdraw:</h1>\r\n                </div>\r\n                {/* CONTENTS */}\r\n                <div className=\"min-h-[2rem] pb-[0.5rem]\">\r\n                  <div className=\"flex flex-col my-[1rem]\">\r\n                    <label className=\"block uppercase tracking-wide text-gray-100 mb-1 text-left\">\r\n                      Receipt Address:\r\n                    </label>\r\n                    <input \r\n                        className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                        type=\"text\"\r\n                        value={address}\r\n                        onChange={e => setAddress(e.target.value)} />\r\n                  </div>\r\n                  <div className=\"flex flex-col my-[1rem] mb-[2.6rem]\">\r\n                    <label className=\"block uppercase tracking-wide text-gray-100 mb-1 text-left\">\r\n                      Withdraw Amount:\r\n                    </label>\r\n                    <div className=\"flex items-center\">\r\n                      <input \r\n                          className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                          type=\"number\"\r\n                          value={balance}\r\n                          min={0}\r\n                          onChange={e => setBalance(e.target.value)} />\r\n                      <button \r\n                          className={`w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#D9D9D9] text-gray-800`}                                      \r\n                          onClick={()=>handleMaxBalance()}\r\n                      >Max</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* CONTROLS */}\r\n                <div className='absolute right-6 bottom-4'>\r\n                  <button \r\n                      className={`w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#404040] border border-[#D9D9D9] text-gray-100 mr-6`}            \r\n                      onClick={() => setIsModal(false)}\r\n                  >Cancel</button>\r\n                  <button \r\n                      className={`w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#D9D9D9] text-gray-800`}            \r\n                      onClick={() => handleConfirm()}\r\n                  >{processing ? 'Processing...':'Withdraw'}</button>\r\n                </div>         \r\n              </div>\r\n            </Dialog.Panel>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default AdminWithdrawModal;","import Layout from '../../components/Layout';\r\nimport Sidebar from './sidebar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport { selectUser } from '../../redux/userReducer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect, useState, createRef } from 'react';\r\nimport { web3Service } from '../../services/web3.service';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { COIN_TYPES } from '../../config/constants';\r\nimport { openSnackBar } from '../../redux/snackBarReducer';\r\nimport { selectFee, updateFeeData, selectAdminData, getFee } from '../../redux/adminReducer';\r\nimport AdminWithdrawModal from '../admin_modals/withdraw.modal';\r\n\r\nconst Wallet = ({\r\n  searchBar = true,\r\n  homeBtn = true,\r\n  walletNav = true,\r\n  faqBtn = false\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const seluser = useSelector(selectUser);\r\n  const adminFee = useSelector(selectFee);\r\n  const adminData = useSelector(selectAdminData);\r\n  const [fee, setFee] = useState(0);\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [walletBalance, setWalletBalance] = useState(0);\r\n  const [transaction, setTransaction] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingBalance, setLoadingBalance] = useState(false);\r\n  const [type, setType] = useState(0);\r\n  const [withdrawModal, setWithdrawModal] = useState(false);\r\n\r\n  const getWalletAddress = (type) => {\r\n    var addr = seluser.is_admin ? adminData.walpublic:seluser.walpublic;\r\n    switch (type) {\r\n      case 0:\r\n        addr = seluser.is_admin ? adminData.btcwalpublic:seluser.btcwalpublic;\r\n        break;\r\n      case 1:\r\n        break;\r\n      case 2:\r\n        break;\r\n      case 3:\r\n        break;\r\n      case 4:\r\n        break;\r\n      case 5:\r\n        break;\r\n    }\r\n    setWalletAddress(addr);\r\n    getTransactions(type, addr);\r\n    getWalletBalance(type, addr);\r\n  }\r\n\r\n  const getWalletBalance = async (type, addr) => { \r\n    setLoadingBalance(true);  \r\n    const ret = await web3Service.getWalletBalance(addr, type);\r\n    const balance = ret.data.ret;\r\n    setWalletBalance(balance);\r\n    setLoadingBalance(false);  \r\n  }\r\n\r\n  const getTransactions = async (type, addr) => {    \r\n    let res;\r\n    setLoading(true);   \r\n    setTransaction([]);\r\n    switch (type) {\r\n      case 0:        \r\n        try {\r\n          res = await web3Service.trackTransactions(addr, 0, type);\r\n          setTransaction(res.data.ret);\r\n        } catch {          \r\n          setLoading(false);\r\n        }\r\n        break;\r\n      case 1:\r\n        try {\r\n          res = await web3Service.trackTransactions(addr, 0, type);\r\n          setTransaction(res.data.ret);\r\n        } catch {          \r\n          setLoading(false);\r\n        }\r\n        break;\r\n      case 2:\r\n        break;\r\n      case 3:\r\n        break;\r\n      case 4:\r\n        try {\r\n          res = await web3Service.trackTransactions(addr, 0, type);\r\n          setTransaction(res.data.ret);\r\n        } catch {          \r\n          setLoading(false);\r\n        }\r\n        break;\r\n      case 5:\r\n        break;\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  const handleCopyClipboard = () => {\r\n    navigator.clipboard.writeText(walletAddress);\r\n    dispatch(openSnackBar({ message: \"Copied to clipboard successfully\", status: 'success' }));\r\n  }\r\n\r\n  const handleSetFee = () => {\r\n    dispatch(updateFeeData(fee));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWalletAddress(type);\r\n  }, [type])\r\n\r\n  useEffect(() => {\r\n    setFee(adminFee);\r\n  }, [adminFee])\r\n\r\n  useEffect(() => {\r\n    dispatch(getFee());\r\n  }, [])\r\n\r\n  return (\r\n    <Layout classes={'bg-[#404040] h-full'} searchBar={searchBar} walletNav={walletNav} faqBtn={faqBtn}>\r\n        <div className='flex flex-row'>\r\n            <div className=\"w-full h-[calc(100vh-80px)]\">\r\n              <div className='text-gray-100 text-2xl flex flex-row items-center px-[2rem] mt-6'>\r\n                {homeBtn && <FontAwesomeIcon icon={faHome} className='cursor-pointer' onClick={() => navigate('/')}/>}\r\n                <p className='ml-2 font-bold'>Wallet</p>\r\n              </div>\r\n              <div className='w-full flex justify-between text-gray-100 text-xl mb-2 bold px-[2rem] py-[1rem]'>\r\n                <div className=\"w-half flex items-center \">\r\n                  <p className='font-bold'>Coin Type: </p>\r\n                  <select\r\n                    className=\"bg-[#404040] font-bold border-b border-gray-300 text-gray-100 text-xl block w-[10rem] p-2.5 focus:outline-none ml-[1rem]\"\r\n                    onChange={(e) => setType(parseInt(e.target.value))}\r\n                  >\r\n                    <option value={0}>{COIN_TYPES[0]}</option>\r\n                    <option value={1}>{COIN_TYPES[1]}</option>\r\n                    <option value={4}>{COIN_TYPES[4]}</option>\r\n                  </select> \r\n                </div>\r\n                {seluser.is_admin && <div className=\"w-half flex items-center ml-[4rem]\">\r\n                  <p className='font-bold'>Client Fee: </p>\r\n                  <input \r\n                    type=\"number\" \r\n                    max={10} \r\n                    min={3} \r\n                    className=\"ml-[1rem] appearance-none bg-transparent border-b border-gray-300 w-[8rem] text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\"\r\n                    value={fee}\r\n                    onChange={(e) => setFee(parseFloat(e.target.value))}\r\n                  />\r\n                  <p className='font-bold mr-2'>{'(%)'}</p>\r\n                  <button \r\n                      className={`w-[8rem] text-xl leading-[2.6rem] rounded-[0.6rem] bg-[#D9D9D9] text-gray-800`}\r\n                      onClick={() => handleSetFee()}\r\n                  >Set</button>\r\n                </div>}\r\n              </div>\r\n              <div className='w-full flex justify-between text-gray-100 text-xl mb-2 bold px-[2rem] pb-[1rem]'>\r\n                <div className=\"w-[60%] flex items-center\">\r\n                  <div onClick={() => handleCopyClipboard()} className='text-left leading-[1.2rem] select-none'>\r\n                    Address: <span className=\"font-bold hover:text-gray-300 cursor-pointer hover:underline\">{walletAddress ? walletAddress.substr(0, 4) + \"...\" + walletAddress.substr(walletAddress.length - 4, 4) : ''}</span>\r\n                  </div>\r\n                  <div className='text-left leading-[1.2rem] select-none ml-[4rem]'>\r\n                    Balance: <span className=\"font-bold\">{loadingBalance ? 'loading...' : walletBalance}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-[40%] flex items-center justify-end\">\r\n                  <button \r\n                      className={`w-[8rem] text-xl leading-[2.6rem] rounded-[0.6rem] bg-[#D9D9D9] text-gray-800`}\r\n                      onClick={()=>setWithdrawModal(true)}\r\n                  >Withdraw</button>\r\n                </div>\r\n              </div>\r\n              <div className='w-full flex text-gray-100 leading-[1.8rem]'>\r\n                <p className='w-[15%] pl-6'>Txn Hash</p>\r\n                <p className='w-[12%] text-left'>Method</p>\r\n                <p className='w-[15%] text-left'>Age</p>\r\n                <p className='w-[15%] text-left'>From</p>\r\n                <p className='w-[18%] text-left'>To</p>\r\n                <p className='w-[10%] text-left'>Value</p>\r\n                <p className='w-[15%] text-left'>Token</p>\r\n              </div>\r\n              <div className='w-full h-[calc(100vh-21rem)] carousel mt-[1rem] text-gray-100 text-xl'>\r\n                {loading ? <div className=\"w-full text-center\">Loading...</div> : transaction.length > 0 ? <div className='w-full h-[calc(100vh-17em)] overflow-y-auto'>\r\n                  {\r\n                    transaction.map((t, index) => {\r\n                      return (\r\n                        <div key={index} className='w-full flex text-gray-100 leading-[1.4rem] bg-[#333333] border-b border-[#282828]'>\r\n                          <p className='w-[15%] text-left'>{t.blockHash.substr(0, 8) + \"...\"}</p>\r\n                          <p className='w-[12%] text-left'>{t.functionName}</p>\r\n                          <p className='w-[15%] text-left'>{t.timeStamp}</p>\r\n                          <p className='w-[15%] text-left'>{t.from.substr(0, 8) + \"...\"}</p>\r\n                          <p className='w-[18%] text-left'>{t.to.substr(0, 8) + \"...\"}</p>\r\n                          <p className='w-[10%] text-left'>{(t.value / 10**18).toFixed(8)}</p>\r\n                          <p className='w-[15%] text-left'>Token</p>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </div> : <div className=\"w-full text-center\">Empty Data</div>}\r\n              </div>\r\n            </div>\r\n            {(seluser && seluser.role === 'merchant') && <Sidebar />}\r\n        </div>\r\n        <AdminWithdrawModal isModal={withdrawModal} setIsModal={setWithdrawModal} walletBalance={walletBalance}/>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Wallet;"],"names":["useNavigate","dispatch","useDispatch","successed","useSelector","selectRegisterSuccess","appear","show","as","Fragment","onClose","className","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","src","alt","onClick","registerSuccess","userRole","selectUserRole","searchBar","homeBtn","walletNav","faqBtn","isModal","setIsModal","walletBalance","coinType","seluser","selectUser","useState","address","setAddress","balance","setBalance","processing","setProcessing","checkWithdrawValidation","index","ret","message","status","length","ethers","handleConfirm","checking","openSnackBar","web3Service","_id","useEffect","onKeyUp","e","code","type","value","onChange","target","min","navigate","adminFee","selectFee","adminData","selectAdminData","fee","setFee","walletAddress","setWalletAddress","setWalletBalance","transaction","setTransaction","loading","setLoading","loadingBalance","setLoadingBalance","setType","withdrawModal","setWithdrawModal","getWalletBalance","addr","data","getTransactions","res","is_admin","walpublic","btcwalpublic","getWalletAddress","getFee","Layout","classes","icon","faHome","parseInt","COIN_TYPES","max","parseFloat","updateFeeData","navigator","clipboard","writeText","substr","map","t","blockHash","functionName","timeStamp","from","to","toFixed","role"],"sourceRoot":""}