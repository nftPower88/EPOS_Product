{"version":3,"file":"static/js/728.a6a03fdf.chunk.js","mappings":"wNAwHA,UA7Ge,WACb,OAA4BA,EAAAA,EAAAA,MAApBC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QACVC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAWF,EAAAA,EAAAA,IAAYG,EAAAA,IACvBC,GAAaJ,EAAAA,EAAAA,IAAYK,EAAAA,IACzBC,GAAUN,EAAAA,EAAAA,IAAYO,EAAAA,KAE5BC,EAAAA,EAAAA,YAAU,WAENX,EADa,aAAXJ,GACOgB,EAAAA,EAAAA,IAAqBf,GACV,aAAXD,GACAiB,EAAAA,EAAAA,IAAqBhB,IAErBiB,EAAAA,EAAAA,IAAqBjB,GAElC,GAAG,CAACD,EAAQC,IAkBZ,OACE,SAAC,IAAM,CAACkB,QAAS,sBAAuBC,WAAW,EAAM,UACrD,iBAAKC,UAAU,gBAAe,WAC1B,iBAAKA,UAAU,8BAA6B,WAC1C,gBAAKA,UAAU,8CAA6C,uCAElCrB,EAAOsB,iBAErB,aAAXtB,IAAyB,yBAEtBM,EAAUiB,KAAI,SAACC,EAAGC,GAChB,OACE,0BACE,iBACEJ,UAAU,kFACVK,QAAS,kBAvBV,SAACF,GACtBpB,GAASuB,EAAAA,EAAAA,IAAYH,GACvB,CAqBsCI,CAAeJ,EAAE,EAAC,WAEhC,cAAGH,UAAU,sBAAqB,SAC/BI,EAAQ,KAEX,cAAGJ,UAAU,wCAAuC,SAAEG,EAAEK,WARlDJ,EAYd,MAGQ,YAAXzB,IAAwB,gBAAKqB,UAAU,6CAA4C,SAE5EZ,EAASc,KAAI,SAACO,EAASL,GACnB,OACI,iBAEIJ,UAAU,+GACVK,QAAS,kBAlDnB,SAACK,GACrB,IAAMC,EAAQ,CACZC,UAAWF,EAAEG,IACbC,OAAQ,GAEV/B,GAASgC,EAAAA,EAAAA,IAAaJ,GACxB,CA4C+CK,CAAcP,EAAQ,EAAC,WAEtC,iBAAKT,UAAU,gEAA+D,WAC5E,eAAIA,UAAU,YAAW,SAAES,EAAQD,QACnC,cAAGR,UAAU,UAAS,SAAES,EAAQQ,eAChC,yBAAG,OAAER,EAAQS,MAAMC,QAAQ,UAE7B,gBAAKnB,UAAU,yEAAwE,UACrF,gBACEoB,IAAG,UAAKC,EAAAA,GAAc,YAAIZ,EAAQa,MAAQb,EAAQa,MAAQ,eAC1DtB,UAAU,4EAZTI,EAiBjB,MAGI,aAAXzB,IAAyB,gBAAKqB,UAAU,6CAA4C,SAE7EV,EAAWY,KAAI,SAACqB,EAAUnB,GACtB,OACI,gBAEIJ,UAAU,4HACVK,QAAS,kBA/DjBmB,EA+DsCD,EAASV,SA9DrEhC,EAAS,YAAD,OAAa2C,IADA,IAACA,CA+DmD,EAAC,SAE3CD,EAASf,MAJLJ,EAOjB,SAIQ,aAAjBZ,EAAQiC,OAAuB,SAAC,IAAO,QAIpD,C","sources":["pages/dashboard/search.jsx"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Layout from '../../components/Layout';\r\nimport Sidebar from './sidebar';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectUser, selectCustomers, getCustomerByKeyword } from '../../redux/userReducer';\r\nimport { selectClassProducts, getProductsByKeyword } from '../../redux/productReducer';\r\nimport { selectClassCategories, getCategoryByKeyword } from '../../redux/pcategoryReducer';\r\nimport { addCurOrders, setCustomer } from '../../redux/orderReducer';\r\nimport { API_IMAGE_PATH } from '../../config/constants';\r\n\r\nconst Search = () => {\r\n  const { filter, keyword } = useParams();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const customers = useSelector(selectCustomers);\r\n  const products = useSelector(selectClassProducts);\r\n  const categories = useSelector(selectClassCategories);\r\n  const seluser = useSelector(selectUser);\r\n\r\n  useEffect(() => {\r\n    if (filter === 'customer') {\r\n      dispatch(getCustomerByKeyword(keyword));\r\n    } else if (filter === 'category') {\r\n      dispatch(getCategoryByKeyword(keyword));\r\n    } else {\r\n      dispatch(getProductsByKeyword(keyword));\r\n    }\r\n  }, [filter, keyword]);\r\n\r\n  const handleProduct = (p) => {\r\n    const order = {\r\n      productId: p._id,\r\n      amount: 1\r\n    }\r\n    dispatch(addCurOrders(order));\r\n  }\r\n\r\n  const handleCustomer = (c) => {\r\n    dispatch(setCustomer(c));\r\n  }\r\n\r\n  const handleCategory = (id) => {\r\n    navigate(`/details/${id}`);\r\n  }\r\n\r\n  return (\r\n    <Layout classes={'bg-[#404040] h-full'} searchBar={false}>\r\n        <div className='flex flex-row'>\r\n            <div className=\"w-full h-[calc(100vh-80px)]\">\r\n              <div className='text-center text-xl text-gray-100 font-bold'>\r\n                {/* {`The search result with \"${keyword}\" of ${filter.toUpperCase()}`} */}\r\n                {`Search results for  ${filter.toUpperCase()}`}\r\n              </div>\r\n              {filter === 'customer' && <div>\r\n                {\r\n                  customers.map((c, index) => {\r\n                    return (\r\n                      <div key={index}>\r\n                        <div \r\n                          className='w-full flex text-gray-100 px-[1rem] leading-[1.8rem] py-[0.5rem] cursor-pointer'\r\n                          onClick={() =>handleCustomer(c)}\r\n                        >\r\n                          <p className='w-[20%] text-center'>\r\n                            {index + 1}  \r\n                          </p>\r\n                          <p className='w-[80%] text-center text-xl font-bold'>{c.name}</p>                          \r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })\r\n                }\r\n              </div>}\r\n              {filter === 'product' && <div className='grid grid-cols-3 gap-6 px-[2rem] py-[2rem]'>\r\n                  {\r\n                      products.map((product, index) => {\r\n                          return (\r\n                              <div \r\n                                  key={index} \r\n                                  className='w-full h-[9rem] flex flex-row text-xl rounded-[0.6rem] bg-[#D9D9D9] text-gray-800 select-none cursor-pointer'\r\n                                  onClick={() => handleProduct(product)}\r\n                              >\r\n                                  <div className='w-[50%] flex flex-col text-center justify-center items-center'>\r\n                                    <h1 className='font-bold'>{product.name}</h1>\r\n                                    <p className='text-md'>{product.description}</p>                                  \r\n                                    <p>Â£{product.price.toFixed(2)}</p>\r\n                                  </div>                  \r\n                                  <div className='w-[50%] flex flex-col text-center justify-center items-center p-[1rem]'>                \r\n                                    <img \r\n                                      src={`${API_IMAGE_PATH}/${product.photo ? product.photo : \"default.png\"}`} \r\n                                      className='border border-gray-700 w-full h-full my-2 object-fill object-center'\r\n                                    />\r\n                                  </div>\r\n                              </div>\r\n                          )\r\n                      })\r\n                  }\r\n              </div>}\r\n              {filter === 'category' && <div className='grid grid-cols-3 gap-6 px-[2rem] py-[2rem]'>\r\n                  {\r\n                      categories.map((category, index) => {\r\n                          return (\r\n                              <div \r\n                                  key={index} \r\n                                  className='w-full h-[6rem] text-xl text-center leading-[6rem] rounded-[0.6rem] bg-[#D9D9D9] text-gray-800 select-none cursor-pointer'\r\n                                  onClick={() => handleCategory(category._id)}\r\n                              >\r\n                                  {category.name}\r\n                              </div>\r\n                          )\r\n                      })\r\n                  }\r\n              </div>}\r\n            </div>\r\n            {seluser.role === 'merchant' && <Sidebar />}\r\n        </div>        \r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Search;"],"names":["useParams","filter","keyword","navigate","useNavigate","dispatch","useDispatch","customers","useSelector","selectCustomers","products","selectClassProducts","categories","selectClassCategories","seluser","selectUser","useEffect","getCustomerByKeyword","getCategoryByKeyword","getProductsByKeyword","classes","searchBar","className","toUpperCase","map","c","index","onClick","setCustomer","handleCustomer","name","product","p","order","productId","_id","amount","addCurOrders","handleProduct","description","price","toFixed","src","API_IMAGE_PATH","photo","category","id","role"],"sourceRoot":""}