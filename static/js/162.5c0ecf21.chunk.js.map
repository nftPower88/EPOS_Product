{"version":3,"file":"static/js/162.5c0ecf21.chunk.js","mappings":"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","sources":["../node_modules/ethers/node_modules/@ethersproject/address/node_modules/@ethersproject/logger/src.ts/index.ts","../node_modules/ethers/node_modules/@ethersproject/address/node_modules/@ethersproject/logger/src.ts/_version.ts","../node_modules/ethers/node_modules/@ethersproject/address/node_modules/@ethersproject/bytes/src.ts/_version.ts","../node_modules/ethers/node_modules/@ethersproject/address/node_modules/@ethersproject/bytes/src.ts/index.ts","../node_modules/ethers/node_modules/@ethersproject/address/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts","../node_modules/ethers/node_modules/@ethersproject/address/node_modules/@ethersproject/bignumber/src.ts/_version.ts","../node_modules/ethers/node_modules/@ethersproject/address/src.ts/_version.ts","../node_modules/ethers/node_modules/@ethersproject/address/src.ts/index.ts","../node_modules/ethers/node_modules/@ethersproject/address/node_modules/@ethersproject/keccak256/src.ts/index.ts","../node_modules/ethers/node_modules/@ethersproject/address/node_modules/bn.js/lib/bn.js"],"sourcesContent":["\"use strict\";\n\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\n\nconst LogLevels: { [ name: string ]: number } = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\n\nimport { version } from \"./_version\";\n\nlet _globalLogger: Logger = null;\n\nfunction _checkNormalize(): string {\n    try {\n        const missing: Array<string> = [ ];\n\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                };\n            } catch(error) {\n                missing.push(form);\n            }\n        });\n\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\")\n        }\n    } catch (error) {\n        return error.message;\n    }\n\n    return null;\n}\n\nconst _normalizeError = _checkNormalize();\n\nexport enum LogLevel {\n    DEBUG    = \"DEBUG\",\n    INFO     = \"INFO\",\n    WARNING  = \"WARNING\",\n    ERROR    = \"ERROR\",\n    OFF      = \"OFF\"\n}\n\n\nexport enum ErrorCode {\n\n    ///////////////////\n    // Generic Errors\n\n    // Unknown Error\n    UNKNOWN_ERROR = \"UNKNOWN_ERROR\",\n\n    // Not Implemented\n    NOT_IMPLEMENTED = \"NOT_IMPLEMENTED\",\n\n    // Unsupported Operation\n    //   - operation\n    UNSUPPORTED_OPERATION = \"UNSUPPORTED_OPERATION\",\n\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    NETWORK_ERROR = \"NETWORK_ERROR\",\n\n    // Some sort of bad response from the server\n    SERVER_ERROR = \"SERVER_ERROR\",\n\n    // Timeout\n    TIMEOUT = \"TIMEOUT\",\n\n    ///////////////////\n    // Operational  Errors\n\n    // Buffer Overrun\n    BUFFER_OVERRUN = \"BUFFER_OVERRUN\",\n\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    NUMERIC_FAULT = \"NUMERIC_FAULT\",\n\n\n    ///////////////////\n    // Argument Errors\n\n    // Missing new operator to an object\n    //  - name: The name of the class\n    MISSING_NEW = \"MISSING_NEW\",\n\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    INVALID_ARGUMENT = \"INVALID_ARGUMENT\",\n\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    MISSING_ARGUMENT = \"MISSING_ARGUMENT\",\n\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    UNEXPECTED_ARGUMENT = \"UNEXPECTED_ARGUMENT\",\n\n\n    ///////////////////\n    // Blockchain Errors\n\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    CALL_EXCEPTION = \"CALL_EXCEPTION\",\n\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    INSUFFICIENT_FUNDS = \"INSUFFICIENT_FUNDS\",\n\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    NONCE_EXPIRED = \"NONCE_EXPIRED\",\n\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    REPLACEMENT_UNDERPRICED = \"REPLACEMENT_UNDERPRICED\",\n\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    UNPREDICTABLE_GAS_LIMIT = \"UNPREDICTABLE_GAS_LIMIT\",\n\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    TRANSACTION_REPLACED = \"TRANSACTION_REPLACED\",\n\n\n    ///////////////////\n    // Interaction Errors\n\n    // The user rejected the action, such as signing a message or sending\n    // a transaction\n    ACTION_REJECTED = \"ACTION_REJECTED\",\n};\n\nconst HEX = \"0123456789abcdef\";\n\nexport class Logger {\n    readonly version: string;\n\n    static errors = ErrorCode;\n\n    static levels = LogLevel;\n\n    constructor(version: string) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n\n    _log(logLevel: LogLevel, args: Array<any>): void {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) { return; }\n        console.log.apply(console, args);\n    }\n\n    debug(...args: Array<any>): void {\n        this._log(Logger.levels.DEBUG, args);\n    }\n\n    info(...args: Array<any>): void {\n        this._log(Logger.levels.INFO, args);\n    }\n\n    warn(...args: Array<any>): void {\n        this._log(Logger.levels.WARNING, args);\n    }\n\n    makeError(message: string, code?: ErrorCode, params?: any): Error {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, { });\n        }\n\n        if (!code) { code = Logger.errors.UNKNOWN_ERROR; }\n        if (!params) { params = {}; }\n\n        const messageDetails: Array<string> = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                      hex += HEX[value[i] >> 4];\n                      hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                } else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            } catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${ code }`);\n        messageDetails.push(`version=${ this.version }`);\n\n        const reason = message;\n\n        let url = \"\";\n\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n\n                switch (fault) {\n                    case \"overflow\": case \"underflow\": case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\": case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n\n        // @TODO: Any??\n        const error: any = new Error(message);\n        error.reason = reason;\n        error.code = code\n\n        Object.keys(params).forEach(function(key) {\n            error[key] = params[key];\n        });\n\n        return error;\n    }\n\n    throwError(message: string, code?: ErrorCode, params?: any): never {\n        throw this.makeError(message, code, params);\n    }\n\n    throwArgumentError(message: string, name: string, value: any): never {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n\n    assert(condition: any, message: string, code?: ErrorCode, params?: any): void {\n        if (!!condition) { return; }\n        this.throwError(message, code, params);\n    }\n\n    assertArgument(condition: any, message: string, name: string, value: any): void {\n        if (!!condition) { return; }\n        this.throwArgumentError(message, name, value);\n    }\n\n    checkNormalize(message?: string): void {\n        if (message == null) { message = \"platform missing String.prototype.normalize\"; }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n\n    checkSafeUint53(value: number, message?: string): void {\n        if (typeof(value) !== \"number\") { return; }\n\n        if (message == null) { message = \"value not safe\"; }\n\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n\n    checkArgumentCount(count: number, expectedCount: number, message?: string): void {\n        if (message) {\n            message = \": \" + message;\n        } else {\n            message = \"\";\n        }\n\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n\n    checkNew(target: any, kind: any): void {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    checkAbstract(target: any, kind: any): void {\n        if (target === kind) {\n            this.throwError(\n                \"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\",\n                Logger.errors.UNSUPPORTED_OPERATION,\n                { name: target.name, operation: \"new\" }\n            );\n        } else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n\n    static globalLogger(): Logger {\n        if (!_globalLogger) { _globalLogger = new Logger(version); }\n        return _globalLogger;\n    }\n\n    static setCensorship(censorship: boolean, permanent?: boolean): void {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        if (_permanentCensorErrors) {\n            if (!censorship) { return; }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n\n    static setLogLevel(logLevel: LogLevel): void {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n\n    static from(version: string): Logger {\n        return new Logger(version);\n    }\n}\n","export const version = \"logger/5.7.0\";\n","export const version = \"bytes/5.7.0\";\n","\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\n///////////////////////////////\n// Exported Types\n\nexport type Bytes = ArrayLike<number>;\n\nexport type BytesLike = Bytes | string;\n\nexport type DataOptions = {\n    allowMissingPrefix?: boolean;\n    hexPad?: \"left\" | \"right\" | null;\n};\n\nexport interface Hexable {\n    toHexString(): string;\n}\n\n\n/*\nexport interface HexString {\n    length: number;\n    substring: (start: number, end?: number) => string;\n\n    [index: number]: string;\n}\n*/\n\nexport type SignatureLike  = {\n    r: string;\n    s?: string;\n    _vs?: string,\n    recoveryParam?: number;\n    v?: number;\n} | BytesLike;\n\nexport interface Signature {\n    r: string;\n\n    s: string;\n    _vs: string,\n\n    recoveryParam: number;\n    v: number;\n\n    yParityAndS: string\n    compact: string;\n}\n\n///////////////////////////////\n\n\nfunction isHexable(value: any): value is Hexable {\n    return !!(value.toHexString);\n}\n\nfunction addSlice(array: Uint8Array): Uint8Array {\n    if (array.slice) { return array; }\n\n    array.slice = function() {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    }\n\n    return array;\n}\n\nexport function isBytesLike(value: any): value is BytesLike {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\n\nfunction isInteger(value: number) {\n    return (typeof(value) === \"number\" && value == value && (value % 1) === 0);\n}\n\nexport function isBytes(value: any): value is Bytes {\n    if (value == null) { return false; }\n\n    if (value.constructor === Uint8Array) { return true; }\n    if (typeof(value) === \"string\") { return false; }\n    if (!isInteger(value.length) || value.length < 0) { return false; }\n\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) { return false; }\n    }\n    return true;\n}\n\n\nexport function arrayify(value: BytesLike | Hexable | number, options?: DataOptions): Uint8Array {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) { result.push(0); }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { value = value.toHexString(); }\n\n    if (isHexString(value)) {\n        let hex = (<string>value).substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0\" + hex;\n            } else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n\n        return addSlice(new Uint8Array(result));\n    }\n\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\n\nexport function concat(items: ReadonlyArray<BytesLike>): Uint8Array {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n\n    const result = new Uint8Array(length);\n\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n\n    return addSlice(result);\n}\n\nexport function stripZeros(value: BytesLike): Uint8Array {\n    let result: Uint8Array = arrayify(value);\n\n    if (result.length === 0) { return result; }\n\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) { start++ }\n\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n\n    return result;\n}\n\nexport function zeroPad(value: BytesLike, length: number): Uint8Array {\n    value = arrayify(value);\n\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\n\n\nexport function isHexString(value: any, length?: number): boolean {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n    if (length && value.length !== 2 + 2 * length) { return false; }\n    return true;\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\nexport function hexlify(value: BytesLike | Hexable | number | bigint, options?: DataOptions): string {\n    if (!options) { options = { }; }\n\n    if (typeof(value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n\n        if (hex.length) {\n            if (hex.length % 2) { hex = \"0\" + hex; }\n            return \"0x\" + hex;\n        }\n\n        return \"0x00\";\n    }\n\n    if (typeof(value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) { return (\"0x0\" + value); }\n        return \"0x\" + value;\n    }\n\n    if (options.allowMissingPrefix && typeof(value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n         value = \"0x\" + value;\n    }\n\n    if (isHexable(value)) { return value.toHexString(); }\n\n    if (isHexString(value)) {\n        if ((<string>value).length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + (<string>value).substring(2);\n            } else if (options.hexPad === \"right\") {\n                value += \"0\";\n            } else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return (<string>value).toLowerCase();\n    }\n\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n             let v = value[i];\n             result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data: BytesLike) {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n\n    return (data.length - 2) / 2;\n}\n\nexport function hexDataSlice(data: BytesLike, offset: number, endOffset?: number): string {\n    if (typeof(data) !== \"string\") {\n        data = hexlify(data);\n    } else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data );\n    }\n\n    offset = 2 + 2 * offset;\n\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n\n    return \"0x\" + data.substring(offset);\n}\n\nexport function hexConcat(items: ReadonlyArray<BytesLike>): string {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\n\nexport function hexValue(value: BytesLike | Hexable | number | bigint): string {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") { return \"0x0\"; }\n    return trimmed;\n}\n\nexport function hexStripZeros(value: BytesLike): string {\n    if (typeof(value) !== \"string\") { value = hexlify(value); }\n\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") { offset++; }\n    return \"0x\" + value.substring(offset);\n}\n\nexport function hexZeroPad(value: BytesLike, length: number): string {\n    if (typeof(value) !== \"string\") {\n        value = hexlify(value);\n    } else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n\n    return value;\n}\n\nexport function splitSignature(signature: SignatureLike): Signature {\n\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n\n    if (isBytesLike(signature)) {\n        let bytes: Uint8Array = arrayify(signature);\n\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n\n        } else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        } else {\n\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n\n\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            } else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) { bytes[32] |= 0x80; }\n        result._vs = hexlify(bytes.slice(32, 64))\n\n    } else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1: 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            } else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            } else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            } else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            } else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        } else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            } else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v :(1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        } else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        } else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) { vs[0] |= 0x80; }\n        const _vs = hexlify(vs);\n\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        } else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n\n    return result;\n}\n\nexport function joinSignature(signature: SignatureLike): string {\n    signature = splitSignature(signature);\n\n    return hexlify(concat([\n         signature.r,\n         signature.s,\n         (signature.recoveryParam ? \"0x1c\": \"0x1b\")\n    ]));\n}\n\n","\"use strict\";\n\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\n\nimport _BN from \"bn.js\";\nimport BN = _BN.BN;\n\nimport { Bytes, Hexable, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst _constructorGuard = { };\n\nconst MAX_SAFE = 0x1fffffffffffff;\n\n\nexport type BigNumberish = BigNumber | Bytes | bigint | string | number;\n\nexport function isBigNumberish(value: any): value is BigNumberish {\n    return (value != null) && (\n        BigNumber.isBigNumber(value) ||\n        (typeof(value) === \"number\" && (value % 1) === 0) ||\n        (typeof(value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        isHexString(value) ||\n        (typeof(value) === \"bigint\") ||\n        isBytes(value)\n    );\n}\n\n// Only warn about passing 10 into radix once\nlet _warnedToStringRadix = false;\n\nexport class BigNumber implements Hexable {\n    readonly _hex: string;\n    readonly _isBigNumber: boolean;\n\n    constructor(constructorGuard: any, hex: string) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n\n        this._hex = hex;\n        this._isBigNumber = true;\n\n        Object.freeze(this);\n    }\n\n    fromTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).fromTwos(value));\n    }\n\n    toTwos(value: number): BigNumber {\n        return toBigNumber(toBN(this).toTwos(value));\n    }\n\n    abs(): BigNumber {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    }\n\n    add(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    }\n\n    sub(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    }\n\n    div(other: BigNumberish): BigNumber {\n        const o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    }\n\n    mul(other: BigNumberish): BigNumber {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    }\n\n    mod(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    }\n\n    pow(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    }\n\n    and(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    }\n\n    or(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    }\n\n    xor(other: BigNumberish): BigNumber {\n        const value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    }\n\n    mask(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    }\n\n    shl(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    }\n\n    shr(value: number): BigNumber {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    }\n\n    eq(other: BigNumberish): boolean {\n        return toBN(this).eq(toBN(other));\n    }\n\n    lt(other: BigNumberish): boolean {\n        return toBN(this).lt(toBN(other));\n    }\n\n    lte(other: BigNumberish): boolean {\n        return toBN(this).lte(toBN(other));\n    }\n\n    gt(other: BigNumberish): boolean {\n        return toBN(this).gt(toBN(other));\n   }\n\n    gte(other: BigNumberish): boolean {\n        return toBN(this).gte(toBN(other));\n    }\n\n    isNegative(): boolean {\n        return (this._hex[0] === \"-\");\n    }\n\n    isZero(): boolean {\n        return toBN(this).isZero();\n    }\n\n    toNumber(): number {\n        try {\n            return toBN(this).toNumber();\n        } catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    }\n\n    toBigInt(): bigint {\n        try {\n            return BigInt(this.toString());\n        } catch (e) { }\n\n        return logger.throwError(\"this platform does not support BigInt\", Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    }\n\n    toString(): string {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            } else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            } else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", Logger.errors.UNEXPECTED_ARGUMENT, { });\n            }\n        }\n        return toBN(this).toString(10);\n    }\n\n    toHexString(): string {\n        return this._hex;\n    }\n\n    toJSON(key?: string): any {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    }\n\n    static from(value: any): BigNumber {\n        if (value instanceof BigNumber) { return value; }\n\n        if (typeof(value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n\n        if (typeof(value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n\n            return BigNumber.from(String(value));\n        }\n\n        const anyValue = <any>value;\n\n        if (typeof(anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n\n        if (isBytes(anyValue)) {\n            return BigNumber.from(hexlify(anyValue));\n        }\n\n        if (anyValue) {\n\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                const hex = anyValue.toHexString();\n                if (typeof(hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n\n            } else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                let hex = anyValue._hex;\n\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n\n                if (typeof(hex) === \"string\") {\n                    if (isHexString(hex) || (hex[0] === \"-\" && isHexString(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    }\n\n    static isBigNumber(value: any): value is BigNumber {\n        return !!(value && value._isBigNumber);\n    }\n}\n\n// Normalize the hex string\nfunction toHex(value: string | BN): string {\n\n    // For BN, call on the hex string\n    if (typeof(value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") { logger.throwArgumentError(\"invalid hex\", \"value\", value); }\n\n        // Call toHex on the positive component\n        value = toHex(value);\n\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") { return value; }\n\n        // Negate the value\n        return \"-\" + value;\n    }\n\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") { value = \"0x\" + value; }\n\n    // Normalize zero\n    if (value === \"0x\") { return \"0x00\"; }\n\n    // Make the string even length\n    if (value.length % 2) { value = \"0x0\" + value.substring(2); }\n\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n\n    return value;\n}\n\nfunction toBigNumber(value: BN): BigNumber {\n    return BigNumber.from(toHex(value));\n}\n\nfunction toBN(value: BigNumberish): BN {\n    const hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\n\nfunction throwFault(fault: string, operation: string, value?: any): never {\n    const params: any = { fault: fault, operation: operation };\n    if (value != null) { params.value = value; }\n\n    return logger.throwError(fault, Logger.errors.NUMERIC_FAULT, params);\n}\n\n// value should have no prefix\nexport function _base36To16(value: string): string {\n    return (new BN(value, 36)).toString(16);\n}\n\n// value should have no prefix\nexport function _base16To36(value: string): string {\n    return (new BN(value, 16)).toString(36);\n}\n","export const version = \"bignumber/5.7.0\";\n","export const version = \"address/5.5.0\";\n","\"use strict\";\n\nimport { arrayify, BytesLike, concat, hexDataLength, hexDataSlice, isHexString, stripZeros } from \"@ethersproject/bytes\";\nimport { BigNumber, BigNumberish, _base16To36, _base36To16 } from \"@ethersproject/bignumber\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { encode } from \"@ethersproject/rlp\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nfunction getChecksumAddress(address: string): string {\n    if (!isHexString(address, 20)) {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = arrayify(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// Shims for environments that are missing some required constants and functions\nconst MAX_SAFE_INTEGER: number = 0x1fffffffffffff;\n\nfunction log10(x: number): number {\n    if (Math.log10) { return Math.log10(x); }\n    return Math.log(x) / Math.LN10;\n}\n\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\nconst safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nexport function getAddress(address: string): string {\n    let result = null;\n\n    if (typeof(address) !== \"string\") {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (address.substring(0, 2) !== \"0x\") { address = \"0x\" + address; }\n\n        result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {\n            logger.throwArgumentError(\"bad address checksum\", \"address\", address);\n        }\n\n    // Maybe ICAP? (we only support direct mode)\n    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n\n        // It is an ICAP address with a bad checksum\n        if (address.substring(2, 4) !== ibanChecksum(address)) {\n            logger.throwArgumentError(\"bad icap checksum\", \"address\", address);\n        }\n\n        result = _base36To16(address.substring(4));\n        while (result.length < 40) { result = \"0\" + result; }\n        result = getChecksumAddress(\"0x\" + result);\n\n    } else {\n        logger.throwArgumentError(\"invalid address\", \"address\", address);\n    }\n\n    return result;\n}\n\nexport function isAddress(address: string): boolean {\n    try {\n        getAddress(address);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function getIcapAddress(address: string): string {\n    let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\nexport function getContractAddress(transaction: { from: string, nonce: BigNumberish }) {\n    let from: string = null;\n    try {\n        from = getAddress(transaction.from);\n    } catch (error) {\n        logger.throwArgumentError(\"missing from address\", \"transaction\", transaction);\n    }\n\n    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));\n\n    return getAddress(hexDataSlice(keccak256(encode([ from, nonce ])), 12));\n}\n\nexport function getCreate2Address(from: string, salt: BytesLike, initCodeHash: BytesLike): string {\n    if (hexDataLength(salt) !== 32) {\n        logger.throwArgumentError(\"salt must be 32 bytes\", \"salt\", salt);\n    }\n    if (hexDataLength(initCodeHash) !== 32) {\n        logger.throwArgumentError(\"initCodeHash must be 32 bytes\", \"initCodeHash\", initCodeHash);\n    }\n    return getAddress(hexDataSlice(keccak256(concat([ \"0xff\", getAddress(from), salt, initCodeHash ])), 12))\n}\n","\"use strict\";\n\nimport sha3 from \"js-sha3\";\n\nimport { arrayify, BytesLike } from \"@ethersproject/bytes\";\n\nexport function keccak256(data: BytesLike): string {\n    return '0x' + sha3.keccak_256(arrayify(data));\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"names":["_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","_globalLogger","LogLevel","ErrorCode","_normalizeError","missing","forEach","form","normalize","Error","push","length","join","String","fromCharCode","message","_checkNormalize","HEX","Logger","version","Object","defineProperty","this","enumerable","value","writable","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","_log","levels","DEBUG","INFO","WARNING","code","params","makeError","errors","UNKNOWN_ERROR","messageDetails","keys","key","Uint8Array","hex","i","JSON","stringify","toString","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","name","throwError","INVALID_ARGUMENT","argument","condition","UNSUPPORTED_OPERATION","operation","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","target","kind","censorship","permanent","globalLogger","warn","logger","isHexable","toHexString","addSlice","array","slice","Array","prototype","call","arguments","isInteger","isBytes","constructor","v","arrayify","options","checkSafeUint53","result","unshift","parseInt","allowMissingPrefix","substring","isHexString","hexPad","match","BN","_BN","getChecksumAddress","address","chars","split","expanded","charCodeAt","data","hashed","sha3","toUpperCase","ibanLookup","x","safeDigits","Math","floor","log10","LN10","ibanChecksum","map","c","block","checksum","getAddress","isAddress","module","exports","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","window","require","e","parseHex4Bits","string","index","parseHexByte","lowerBound","r","parseBase","str","start","end","mul","b","len","min","move","dest","src","num","isArray","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","toArray","ceil","j","w","_strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","Symbol","for","inspect","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","smallMulTo","self","a","lo","k","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","res","allocUnsafe","allocate","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","undefined","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u"],"sourceRoot":""}