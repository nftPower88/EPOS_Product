{"version":3,"file":"static/js/518.a8832aee.chunk.js","mappings":"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","sources":["pages/admin_modals/withdraw.modal.jsx","pages/dashboard/wallet.jsx"],"sourcesContent":["import { Fragment, useState, useEffect } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { openSnackBar } from '../../redux/snackBarReducer';\r\nimport { ethers } from \"ethers\"\r\n\r\nconst AdminWithdrawModal = ({isModal, setIsModal, walletBalance, coinType}) => {\r\n  // const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [address, setAddress] = useState('');\r\n  const [balance, setBalance] = useState(0);\r\n\r\n  const checkWithdrawValidation = (index) => {\r\n    const ret = {message: \"\", status: false};\r\n    if (address.length === 0) {ret.message = \"Please input receipt address.\"; ret.status = false;}\r\n    else if (!ethers.utils.isAddress(address)) {ret.message = \"Should be available receipt address.\"; ret.status = false;}\r\n    else if (balance === 0) {ret.message = \"Withdraw ammount could not be zero.\"; ret.status = false;}\r\n    else if (balance < 0) {ret.message = \"Withdraw ammount could not be negative value.\"; ret.status = false;}\r\n    else if (balance > walletBalance) {ret.message = `Withdraw ammount could not be greater than ${walletBalance}.`; ret.status = false;}\r\n    else { ret.message = \"\"; ret.status = true;}\r\n\r\n    return ret;\r\n  }\r\n\r\n  const handleConfirm = () => {\r\n    const checking = checkWithdrawValidation();\r\n    if (!checking.status) {\r\n      dispatch(openSnackBar({ message: checking.message, status: 'error' }));  \r\n      return;\r\n    }\r\n    setIsModal(false);\r\n  }\r\n\r\n  const handleMaxBalance = () => {\r\n    setBalance(walletBalance);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isModal) {\r\n      setAddress('');\r\n      setBalance(0);\r\n    }\r\n  }, [isModal])\r\n\r\n  return (\r\n    <Transition appear show={isModal} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        onClose={() => {}}\r\n        className=\"relative z-50\">\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\">\r\n          <div className=\"fixed inset-0 backdrop-blur-sm bg-[#FFFFFF44]\" aria-hidden=\"true\" />\r\n        </Transition.Child>\r\n        <div className=\"fixed inset-0 flex items-center bg-transparent justify-center \">\r\n          {/* The actual dialog panel  */}\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 scale-95\"\r\n            enterTo=\"opacity-100 scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 scale-100\"\r\n            leaveTo=\"opacity-0 scale-95\">\r\n            <Dialog.Panel className=\" max-w-full transform transition-all md:max-w-full\" onKeyUp={(e) => {if (e.code === 'Enter' || e.code === 'NumpadEnter') { handleConfirm()}} }>\r\n              <div className=\"relative bg-[#404040] w-[30vw] max-w-[1000px] min-w-[380px] min-h-[160px] rounded-[1rem] drop-shadow-md p-6 text-center shadow-xl\">                              \r\n                {/* TITLE */}\r\n                <div className=''>\r\n                  <h1 className='text-xl font-bold text-left text-[#D9D9D9] select-none'>Withdraw:</h1>\r\n                </div>\r\n                {/* CONTENTS */}\r\n                <div className=\"min-h-[2rem] pb-[0.5rem]\">\r\n                  <div className=\"flex flex-col my-[1rem]\">\r\n                    <label className=\"block uppercase tracking-wide text-gray-100 mb-1 text-left\">\r\n                      Receipt Address:\r\n                    </label>\r\n                    <input \r\n                        className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                        type=\"text\"\r\n                        value={address}\r\n                        onChange={e => setAddress(e.target.value)} />\r\n                  </div>\r\n                  <div className=\"flex flex-col my-[1rem] mb-[2.6rem]\">\r\n                    <label className=\"block uppercase tracking-wide text-gray-100 mb-1 text-left\">\r\n                      Withdraw Amount:\r\n                    </label>\r\n                    <div className=\"flex items-center\">\r\n                      <input \r\n                          className=\"appearance-none bg-transparent border-b border-gray-300 w-full text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\" \r\n                          type=\"number\"\r\n                          value={balance}\r\n                          min={0}\r\n                          onChange={e => setBalance(e.target.value)} />\r\n                      <button \r\n                          className={`w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#D9D9D9] text-gray-800`}                                      \r\n                          onClick={()=>handleMaxBalance()}\r\n                      >Max</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {/* CONTROLS */}\r\n                <div className='absolute right-6 bottom-4'>\r\n                  <button \r\n                      className={`w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#404040] border border-[#D9D9D9] text-gray-100 mr-6`}            \r\n                      onClick={() => setIsModal(false)}\r\n                  >Cancel</button>\r\n                  <button \r\n                      className={`w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#D9D9D9] text-gray-800`}            \r\n                      onClick={() => handleConfirm()}\r\n                  >Withdraw</button>\r\n                </div>         \r\n              </div>\r\n            </Dialog.Panel>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default AdminWithdrawModal;","import Layout from '../../components/Layout';\r\nimport Sidebar from './sidebar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport { selectUser } from '../../redux/userReducer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect, useState, createRef } from 'react';\r\nimport { web3Service } from '../../services/web3.service';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { COIN_TYPES } from '../../config/constants';\r\nimport { openSnackBar } from '../../redux/snackBarReducer';\r\nimport { selectFee, updateFeeData, selectAdminData, getFee } from '../../redux/adminReducer';\r\nimport AdminWithdrawModal from '../admin_modals/withdraw.modal';\r\n\r\nconst Wallet = ({\r\n  searchBar = true,\r\n  homeBtn = true,\r\n  walletNav = true,\r\n  faqBtn = false\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const seluser = useSelector(selectUser);\r\n  const adminFee = useSelector(selectFee);\r\n  const adminData = useSelector(selectAdminData);\r\n  const [fee, setFee] = useState(0);\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [walletBalance, setWalletBalance] = useState(0);\r\n  const [transaction, setTransaction] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingBalance, setLoadingBalance] = useState(false);\r\n  const [type, setType] = useState(0);\r\n  const [withdrawModal, setWithdrawModal] = useState(false);\r\n\r\n  const getWalletAddress = (type) => {\r\n    var addr = seluser.is_admin ? adminData.walpublic:seluser.walpublic;\r\n    switch (type) {\r\n      case 0:\r\n        addr = seluser.is_admin ? adminData.btcwalpublic:seluser.btcwalpublic;\r\n        break;\r\n      case 1:\r\n        break;\r\n      case 2:\r\n        break;\r\n      case 3:\r\n        break;\r\n      case 4:\r\n        break;\r\n      case 5:\r\n        break;\r\n    }\r\n    setWalletAddress(addr);\r\n    getTransactions(type, addr);\r\n    getWalletBalance(type, addr);\r\n  }\r\n\r\n  const getWalletBalance = async (type, addr) => { \r\n    setLoadingBalance(true);  \r\n    const ret = await web3Service.getWalletBalance(addr, type);\r\n    const balance = ret.data.ret;\r\n    setWalletBalance(balance);\r\n    setLoadingBalance(false);  \r\n  }\r\n\r\n  const getTransactions = async (type, addr) => {    \r\n    let res;\r\n    setLoading(true);   \r\n    setTransaction([]);\r\n    switch (type) {\r\n      case 0:        \r\n        setTransaction([]);\r\n        break;\r\n      case 1:\r\n        try {\r\n          res = await web3Service.trackTransactions(addr, 0, type);\r\n          setTransaction(res.data.ret);\r\n        } catch {          \r\n          setLoading(false);\r\n        }\r\n        break;\r\n      case 2:\r\n        break;\r\n      case 3:\r\n        break;\r\n      case 4:\r\n        try {\r\n          res = await web3Service.trackTransactions(addr, 0, type);\r\n          setTransaction(res.data.ret);\r\n        } catch {          \r\n          setLoading(false);\r\n        }\r\n        break;\r\n      case 5:\r\n        break;\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  const handleCopyClipboard = () => {\r\n    navigator.clipboard.writeText(walletAddress);\r\n    dispatch(openSnackBar({ message: \"Copied to clipboard successfully\", status: 'success' }));\r\n  }\r\n\r\n  const handleSetFee = () => {\r\n    dispatch(updateFeeData(fee));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWalletAddress(type);\r\n  }, [type])\r\n\r\n  useEffect(() => {\r\n    setFee(adminFee);\r\n  }, [adminFee])\r\n\r\n  useEffect(() => {\r\n    dispatch(getFee());\r\n  }, [])\r\n\r\n  return (\r\n    <Layout classes={'bg-[#404040] h-full'} searchBar={searchBar} walletNav={walletNav} faqBtn={faqBtn}>\r\n        <div className='flex flex-row'>\r\n            <div className=\"w-full h-[calc(100vh-80px)]\">\r\n              <div className='text-gray-100 text-2xl flex flex-row items-center px-[2rem] mt-6'>\r\n                {homeBtn && <FontAwesomeIcon icon={faHome} className='cursor-pointer' onClick={() => navigate('/')}/>}\r\n                <p className='ml-2 font-bold'>Wallet</p>\r\n              </div>\r\n              <div className='w-full flex justify-between text-gray-100 text-xl mb-2 bold px-[2rem] py-[1rem]'>\r\n                <div className=\"w-half flex items-center \">\r\n                  <p className='font-bold'>Coin Type: </p>\r\n                  <select\r\n                    className=\"bg-[#404040] font-bold border-b border-gray-300 text-gray-100 text-xl block w-[10rem] p-2.5 focus:outline-none ml-[1rem]\"\r\n                    onChange={(e) => setType(parseInt(e.target.value))}\r\n                  >\r\n                    <option value={0}>{COIN_TYPES[0]}</option>\r\n                    <option value={1}>{COIN_TYPES[1]}</option>\r\n                    <option value={4}>{COIN_TYPES[4]}</option>\r\n                  </select> \r\n                </div>\r\n                {seluser.is_admin && <div className=\"w-half flex items-center ml-[4rem]\">\r\n                  <p className='font-bold'>Client Fee: </p>\r\n                  <input \r\n                    type=\"number\" \r\n                    max={10} \r\n                    min={3} \r\n                    className=\"ml-[1rem] appearance-none bg-transparent border-b border-gray-300 w-[8rem] text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\"\r\n                    value={fee}\r\n                    onChange={(e) => setFee(parseFloat(e.target.value))}\r\n                  />\r\n                  <p className='font-bold mr-2'>{'(%)'}</p>\r\n                  <button \r\n                      className={`w-[8rem] text-xl leading-[2.6rem] rounded-[0.6rem] bg-[#D9D9D9] text-gray-800`}\r\n                      onClick={() => handleSetFee()}\r\n                  >Set</button>\r\n                </div>}\r\n              </div>\r\n              <div className='w-full flex justify-between text-gray-100 text-xl mb-2 bold px-[2rem] pb-[1rem]'>\r\n                <div className=\"w-[60%] flex items-center\">\r\n                  <div onClick={() => handleCopyClipboard()} className='text-left leading-[1.2rem] select-none'>\r\n                    Address: <span className=\"font-bold hover:text-gray-300 cursor-pointer hover:underline\">{walletAddress ? walletAddress.substr(0, 4) + \"...\" + walletAddress.substr(walletAddress.length - 4, 4) : ''}</span>\r\n                  </div>\r\n                  <div className='text-left leading-[1.2rem] select-none ml-[4rem]'>\r\n                    Balance: <span className=\"font-bold\">{loadingBalance ? 'loading...' : walletBalance}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-[40%] flex items-center justify-end\">\r\n                  <button \r\n                      className={`w-[8rem] text-xl leading-[2.6rem] rounded-[0.6rem] bg-[#D9D9D9] text-gray-800`}\r\n                      onClick={()=>setWithdrawModal(true)}\r\n                  >Withdraw</button>\r\n                </div>\r\n              </div>\r\n              <div className='w-full flex text-gray-100 leading-[1.8rem]'>\r\n                <p className='w-[15%] pl-6'>Txn Hash</p>\r\n                <p className='w-[12%] text-left'>Method</p>\r\n                <p className='w-[15%] text-left'>Age</p>\r\n                <p className='w-[15%] text-left'>From</p>\r\n                <p className='w-[18%] text-left'>To</p>\r\n                <p className='w-[10%] text-left'>Value</p>\r\n                <p className='w-[15%] text-left'>Token</p>\r\n              </div>\r\n              <div className='w-full h-[calc(100vh-21rem)] carousel mt-[1rem] text-gray-100 text-xl'>\r\n                {loading ? <div className=\"w-full text-center\">Loading...</div> : transaction.length > 0 ? <div className='w-full h-[calc(100vh-17em)] overflow-y-auto'>\r\n                  {\r\n                    transaction.map((t, index) => {\r\n                      return (\r\n                        <div key={index} className='w-full flex text-gray-100 leading-[1.4rem] bg-[#333333] border-b border-[#282828]'>\r\n                          <p className='w-[15%] text-left'>{t.blockHash.substr(0, 8) + \"...\"}</p>\r\n                          <p className='w-[12%] text-left'>{t.functionName}</p>\r\n                          <p className='w-[15%] text-left'>{t.timeStamp}</p>\r\n                          <p className='w-[15%] text-left'>{t.from.substr(0, 8) + \"...\"}</p>\r\n                          <p className='w-[18%] text-left'>{t.to.substr(0, 8) + \"...\"}</p>\r\n                          <p className='w-[10%] text-left'>{(t.value / 10**18).toFixed(8)}</p>\r\n                          <p className='w-[15%] text-left'>Token</p>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </div> : <div className=\"w-full text-center\">Empty Data</div>}\r\n              </div>\r\n            </div>\r\n            {(seluser && seluser.role === 'merchant') && <Sidebar />}\r\n        </div>\r\n        <AdminWithdrawModal isModal={withdrawModal} setIsModal={setWithdrawModal} walletBalance={walletBalance}/>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Wallet;"],"names":["isModal","setIsModal","walletBalance","dispatch","coinType","useDispatch","useState","address","setAddress","balance","setBalance","handleConfirm","checking","index","ret","message","status","length","ethers","checkWithdrawValidation","openSnackBar","useEffect","appear","show","as","Fragment","onClose","className","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","onKeyUp","e","code","type","value","onChange","target","min","onClick","searchBar","homeBtn","walletNav","faqBtn","navigate","useNavigate","seluser","useSelector","selectUser","adminFee","selectFee","adminData","selectAdminData","fee","setFee","walletAddress","setWalletAddress","setWalletBalance","transaction","setTransaction","loading","setLoading","loadingBalance","setLoadingBalance","setType","withdrawModal","setWithdrawModal","getWalletBalance","addr","web3Service","data","getTransactions","res","is_admin","walpublic","btcwalpublic","getWalletAddress","getFee","Layout","classes","icon","faHome","parseInt","COIN_TYPES","max","parseFloat","updateFeeData","navigator","clipboard","writeText","substr","map","t","blockHash","functionName","timeStamp","from","to","toFixed","role"],"sourceRoot":""}