{"version":3,"file":"static/js/414.ad50765c.chunk.js","mappings":"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","sources":["pages/dashboard/merchant_group/orders.jsx"],"sourcesContent":["import Layout from '../../../components/Layout';\r\nimport Sidebar from '../sidebar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { selectSaleOrders, getOrdersBySale, refundOrder, setWaitingPaymentID } from '../../../redux/orderReducer';\r\nimport { selectProducts } from '../../../redux/productReducer';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { floatAdd, floatMul } from '../../../utils/utils';\r\nimport { COIN_TYPES } from '../../../config/constants';\r\nimport WaitingPaymentModal from '../merchant_group/modals/waiting.payment.modal';\r\n\r\nconst Orders = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const orders = useSelector(selectSaleOrders);\r\n  const products = useSelector(selectProducts);\r\n  const [paymentModal, setPaymentModal] = useState(false);\r\n  const [cposOrdered, setCposOrdered] = useState({});\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrdersBySale());\r\n  }, []);\r\n\r\n  const getProduct = (id) => {\r\n    const p = products.filter((e) => e._id === id);\r\n    return p[0];\r\n  }\r\n\r\n  const getOrderPrice = (orderlist) => {\r\n    let ret = 0;\r\n    for (let i = 0; i < orderlist.length; i++) {\r\n      const p = getProduct(orderlist[i].productId);\r\n      if (p) {\r\n        ret = floatAdd(ret, floatMul(p.price, orderlist[i].amount));\r\n      } else {\r\n        ret = floatAdd(ret, 0);\r\n      }\r\n    }\r\n    return ret.toFixed(2);\r\n  }\r\n\r\n  const handleRefund = (orderId) => {\r\n    dispatch(refundOrder(orderId));\r\n  }\r\n\r\n  const handleReqPay = (order_) => {\r\n    setCposOrdered(order_);\r\n    dispatch(setWaitingPaymentID(order_._id));\r\n    setPaymentModal(true);\r\n  }\r\n\r\n  return (\r\n    <Layout classes={'bg-[#404040] h-full'}>\r\n        <div className='flex flex-row'>\r\n            <div className=\"w-full h-[calc(100vh-80px)]\">\r\n              <div className='text-gray-100 text-2xl flex flex-row items-center px-[2rem] mt-6'>\r\n                <FontAwesomeIcon icon={faHome} className='cursor-pointer' onClick={() => navigate('/')}/>\r\n                <p className='ml-2 font-bold'>Orders</p>\r\n              </div>\r\n              <div className='text-md text-gray-100 mt-8 h-[calc(100vh-112px-3.5rem)] overflow-y-auto'>\r\n                {\r\n                  orders.map((order, index) => {\r\n                    const orderlist = JSON.parse(order.order.order);\r\n                    console.log(order.customer)\r\n                    return (\r\n                      <div key={index} className=\"collapse border-b border-[#444444]\">\r\n                        <input type=\"checkbox\" /> \r\n                        <div className='collapse-title w-full flex items-center bg-[#333333] px-[2rem] py-[0rem]' style={{minHeight: '0px'}}>\r\n                          <div className='w-[10%] text-left'>{index + 1}</div>\r\n                          <div className='w-[40%] text-center'>{order.merchant.username ? order.merchant.username : order.merchant.businessname}</div>\r\n                          <div className='w-[40%] text-center'>{order.customer ? order.customer.name : 'None'}</div>\r\n                          <div className='w-[10%] collapse-title text-right cursor-pointer py-[1rem] pr-[0px]'><FontAwesomeIcon icon={faCaretDown}/></div>\r\n                        </div>\r\n                        <div className=\"collapse-content bg-[#333333] px-[2rem]\"> \r\n                          {\r\n                            orderlist.map((o, i) => {\r\n                              const p = getProduct(o.productId);\r\n                              return (\r\n                                <>\r\n                                  {p ? <div key={i+20000*index} className=\"py-1\">    \r\n                                      <div className='flex justify-between text-md'>\r\n                                          <div>{p.name} X {o.amount}</div>\r\n                                          <div>{floatMul(p.price, o.amount).toFixed(2)}</div>\r\n                                      </div>\r\n                                  </div> : <div className='flex justify-between text-md'>Deleted</div>}\r\n                                </>\r\n                              );\r\n                            })\r\n                          }\r\n                          <div className='flex justify-between py-1 text-md font-bold border-t border-[#464646]'>\r\n                              <div>SUBTOTAL</div>\r\n                              <div>{getOrderPrice(orderlist)}</div>\r\n                          </div>\r\n                          <div className='flex justify-between py-1 text-md font-bold'>\r\n                              <div>CRYPTO RECEIVED:</div>\r\n                              <div>{order.order.coinAmount.toFixed(8)} {COIN_TYPES[order.order.coinType]}</div>\r\n                          </div>\r\n                          <div className='flex justify-between mt-2'>\r\n                            <button \r\n                                className={`min-w-[6rem] h-[2rem] text-md leading-[2rem] bg-[#333333] border-b border-[#D9D9D9] text-gray-100 mr-6`}            \r\n                                \r\n                            >Print Customer Receipt</button>\r\n                            {order.order.payment ? <button \r\n                                className={`px-2 min-w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#D9D9D9] text-gray-800`}            \r\n                                onClick={()=>handleRefund(order.order._id)}\r\n                            >Refund</button>:\r\n                            <button \r\n                                className={`px-2 min-w-[6rem] h-[2rem] text-md rounded-[0.6rem] leading-[2rem] bg-[#D9D9D9] text-gray-800`}            \r\n                                onClick={()=>handleReqPay(order.order)}\r\n                            >Request Payment</button>}\r\n                          </div> \r\n                        </div>   \r\n                      </div>\r\n                    );\r\n                  })\r\n                }\r\n              </div>\r\n            </div>\r\n            <Sidebar />\r\n            <WaitingPaymentModal isModal={paymentModal} setIsModal={setPaymentModal} cposOrdered={cposOrdered}/>\r\n        </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Orders;"],"names":["navigate","useNavigate","dispatch","useDispatch","orders","useSelector","selectSaleOrders","products","selectProducts","useState","paymentModal","setPaymentModal","cposOrdered","setCposOrdered","useEffect","getOrdersBySale","getProduct","id","filter","e","_id","getOrderPrice","orderlist","ret","i","length","p","productId","floatAdd","floatMul","price","amount","toFixed","classes","className","icon","faHome","onClick","map","order","index","JSON","parse","console","log","customer","type","style","minHeight","merchant","username","businessname","name","faCaretDown","o","coinAmount","COIN_TYPES","coinType","payment","orderId","refundOrder","order_","setWaitingPaymentID","isModal","setIsModal"],"sourceRoot":""}