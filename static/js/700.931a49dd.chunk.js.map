{"version":3,"file":"static/js/700.931a49dd.chunk.js","mappings":"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","sources":["pages/auth/success.modal.jsx","pages/dashboard/customer.jsx","pages/dashboard/wallet.jsx"],"sourcesContent":["import { Fragment, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport confirm from '../../asset/register/confirm.png';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registerSuccess, selectRegisterSuccess } from '../../redux/authReducer';\r\n\r\nconst SuccessModal = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const successed = useSelector(selectRegisterSuccess);\r\n\r\n  return (\r\n    <Transition appear show={successed} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        onClose={() => {}}\r\n        className=\"relative z-50\">\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\">\r\n          <div className=\"fixed inset-0 backdrop-blur-sm bg-[#FFFFFF44]\" aria-hidden=\"true\" />\r\n        </Transition.Child>\r\n        <div className=\"fixed inset-0 flex items-center bg-transparent justify-center \">\r\n          {/* The actual dialog panel  */}\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 scale-95\"\r\n            enterTo=\"opacity-100 scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 scale-100\"\r\n            leaveTo=\"opacity-0 scale-95\">\r\n            <Dialog.Panel className=\" max-w-full transform transition-all md:max-w-full\">\r\n              <div className=\"relative bg-[#404040] w-[50vw] max-w-[1000px] min-w-[380px] min-h-[460px] rounded-[1rem] drop-shadow-md p-6 text-center shadow-xl\">                              \r\n                {/* TITLE */}\r\n                <div className=''>\r\n                  <h1 className='text-2xl font-bold uppercase text-[#D9D9D9] select-none'>REGISTRATION COMPLETE!</h1>\r\n                </div>\r\n                {/* CONTENTS */}\r\n                <div className=\"min-h-[310px] my-[1rem] py-[1rem]\">\r\n                  <h1 className='text-4xl font-bold uppercase text-[#D9D9D9] select-none'>WELCOME!</h1>\r\n                  <img src={confirm} alt=\"confirm\" className='mx-auto h-[210px] mt-6'/>\r\n                </div>\r\n                {/* CONTROLS */}\r\n                <div className='flex justify-center'>\r\n                  <div \r\n                    className=\"bg-[#802BB1] hover:bg-[#943FC5] hover:drop-shadow-lg select-none text-center text-xl text-white uppercase px-8 leading-[3rem] rounded-[2rem] cursor-pointer\"\r\n                    onClick={() => {dispatch(registerSuccess(false));}}\r\n                    >\r\n                    Go To Dashboard\r\n                  </div>\r\n                </div>         \r\n              </div>\r\n            </Dialog.Panel>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default SuccessModal;","import Layout from '../../components/Layout';\r\nimport SuccessModal from '../auth/success.modal';\r\nimport Sidebar from './sidebar';\r\nimport Wallet from './wallet';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUserRole } from '../../redux/userReducer';\r\n\r\nconst Dashboard_Customer = () => {\r\n  const userRole = useSelector(selectUserRole);\r\n\r\n  return (\r\n    <>\r\n    {/* <Layout classes={'bg-[#F5F5F5] h-full'} searchBar={false}>\r\n        <div className='flex flex-cols relative'>\r\n            <Sidebar />\r\n        </div>        \r\n        <SuccessModal />\r\n    </Layout> */}\r\n    {userRole === 'customer' ? <Wallet searchBar={false} homeBtn={false} walletNav={false} faqBtn={true}/> : <></>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard_Customer;","import Layout from '../../components/Layout';\r\nimport Sidebar from './sidebar';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport { selectUser } from '../../redux/userReducer';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect, useState, createRef } from 'react';\r\nimport { web3Service } from '../../services/web3.service';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { COIN_TYPES } from '../../config/constants';\r\nimport { openSnackBar } from '../../redux/snackBarReducer';\r\nimport { selectFee, updateFeeData, selectAdminData, getFee } from '../../redux/adminReducer';\r\n\r\nconst Wallet = ({\r\n  searchBar = true,\r\n  homeBtn = true,\r\n  walletNav = true,\r\n  faqBtn = false\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const seluser = useSelector(selectUser);\r\n  const adminFee = useSelector(selectFee);\r\n  const adminData = useSelector(selectAdminData);\r\n  const [fee, setFee] = useState(0);\r\n  const [walletAddress, setWalletAddress] = useState(\"\");\r\n  const [walletBalance, setWalletBalance] = useState(0);\r\n  const [transaction, setTransaction] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingBalance, setLoadingBalance] = useState(false);\r\n  const [type, setType] = useState(0);\r\n\r\n  const getWalletAddress = (type) => {\r\n    var addr = seluser.is_admin ? adminData.walpublic:seluser.walpublic;\r\n    switch (type) {\r\n      case 0:\r\n        addr = seluser.is_admin ? adminData.btcwalpublic:seluser.btcwalpublic;\r\n        break;\r\n      case 1:\r\n        break;\r\n      case 2:\r\n        break;\r\n      case 3:\r\n        break;\r\n      case 4:\r\n        break;\r\n      case 5:\r\n        break;\r\n    }\r\n    const adr = addr ? addr.substr(0, 4) + \"...\" + addr.substr(addr.length - 4, 4) : '';\r\n    setWalletAddress(adr);\r\n    getTransactions(type, addr);\r\n    getWalletBalance(type, addr);\r\n  }\r\n\r\n  const getWalletBalance = async (type, addr) => { \r\n    setLoadingBalance(true);    \r\n    if (type === 0) {\r\n      setWalletBalance(0);\r\n      setLoadingBalance(false);  \r\n      return;  \r\n    } \r\n    const ret = await web3Service.getWalletBalance(addr, type);\r\n    const balance = ret.data.ret;\r\n    setWalletBalance(balance);\r\n    setLoadingBalance(false);  \r\n  }\r\n\r\n  const getTransactions = async (type, addr) => {    \r\n    let res;\r\n    setLoading(true);   \r\n    setTransaction([]);\r\n    switch (type) {\r\n      case 0:        \r\n        setTransaction([]);\r\n        break;\r\n      case 1:\r\n        try {\r\n          res = await web3Service.trackTransactions(addr, 0, type);\r\n          setTransaction(res.data.ret);\r\n        } catch {          \r\n          setLoading(false);\r\n        }\r\n        break;\r\n      case 2:\r\n        break;\r\n      case 3:\r\n        break;\r\n      case 4:\r\n        try {\r\n          res = await web3Service.trackTransactions(addr, 0, type);\r\n          setTransaction(res.data.ret);\r\n        } catch {          \r\n          setLoading(false);\r\n        }\r\n        break;\r\n      case 5:\r\n        break;\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  const handleCopyClipboard = () => {\r\n    navigator.clipboard.writeText(walletAddress);\r\n    dispatch(openSnackBar({ message: \"Copied to clipboard successfully\", status: 'success' }));\r\n  }\r\n\r\n  const handleSetFee = () => {\r\n    dispatch(updateFeeData(fee));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWalletAddress(type);\r\n  }, [type])\r\n\r\n  useEffect(() => {\r\n    setFee(adminFee);\r\n  }, [adminFee])\r\n\r\n  useEffect(() => {\r\n    dispatch(getFee());\r\n  }, [])\r\n\r\n  return (\r\n    <Layout classes={'bg-[#404040] h-full'} searchBar={searchBar} walletNav={walletNav} faqBtn={faqBtn}>\r\n        <div className='flex flex-row'>\r\n            <div className=\"w-full h-[calc(100vh-80px)]\">\r\n              <div className='text-gray-100 text-2xl flex flex-row items-center px-[2rem] mt-6'>\r\n                {homeBtn && <FontAwesomeIcon icon={faHome} className='cursor-pointer' onClick={() => navigate('/')}/>}\r\n                <p className='ml-2 font-bold'>Wallet</p>\r\n              </div>\r\n              <div className='w-full flex justify-between text-gray-100 text-xl mb-2 bold px-[2rem] py-[1rem]'>\r\n                <div className=\"w-half flex items-center \">\r\n                  <p className='font-bold'>Coin Type: </p>\r\n                  <select\r\n                    className=\"bg-[#404040] font-bold border-b border-gray-300 text-gray-100 text-xl block w-[10rem] p-2.5 focus:outline-none ml-[1rem]\"\r\n                    onChange={(e) => setType(parseInt(e.target.value))}\r\n                  >\r\n                    <option value={0}>{COIN_TYPES[0]}</option>\r\n                    <option value={1}>{COIN_TYPES[1]}</option>\r\n                    <option value={4}>{COIN_TYPES[4]}</option>\r\n                  </select> \r\n                </div>\r\n                {seluser.is_admin && <div className=\"w-half flex items-center ml-[4rem]\">\r\n                  <p className='font-bold'>Client Fee: </p>\r\n                  <input \r\n                    type=\"number\" \r\n                    max={10} \r\n                    min={3} \r\n                    className=\"ml-[1rem] appearance-none bg-transparent border-b border-gray-300 w-[8rem] text-gray-100 mr-3 py-1 px-2 leading-[2rem] focus:outline-none\"\r\n                    value={fee}\r\n                    onChange={(e) => setFee(parseFloat(e.target.value))}\r\n                  />\r\n                  <p className='font-bold mr-2'>{'(%)'}</p>\r\n                  <button \r\n                      className={`w-[8rem] text-xl leading-[2.6rem] rounded-[0.6rem] bg-[#D9D9D9] text-gray-800`}\r\n                      onClick={() => handleSetFee()}\r\n                  >Set</button>\r\n                </div>}\r\n              </div>\r\n              <div className='w-full flex justify-between text-gray-100 text-xl mb-2 bold px-[2rem] pb-[1rem]'>\r\n                <div className=\"w-[60%] flex items-center\">\r\n                  <div onClick={() => handleCopyClipboard()} className='text-left leading-[1.2rem] select-none'>\r\n                    Address: <span className=\"font-bold hover:text-gray-300 cursor-pointer hover:underline\">{walletAddress}</span>\r\n                  </div>\r\n                  <div className='text-left leading-[1.2rem] select-none ml-[4rem]'>\r\n                    Balance: <span className=\"font-bold\">{loadingBalance ? 'loading...' : walletBalance}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"w-[40%] flex items-center justify-end\">\r\n                  <button \r\n                      className={`w-[8rem] text-xl leading-[2.6rem] rounded-[0.6rem] bg-[#D9D9D9] text-gray-800`}\r\n                  >Withdraw</button>\r\n                </div>\r\n              </div>\r\n              <div className='w-full flex text-gray-100 leading-[1.8rem]'>\r\n                <p className='w-[15%] pl-6'>Txn Hash</p>\r\n                <p className='w-[12%] text-left'>Method</p>\r\n                <p className='w-[15%] text-left'>Age</p>\r\n                <p className='w-[15%] text-left'>From</p>\r\n                <p className='w-[18%] text-left'>To</p>\r\n                <p className='w-[10%] text-left'>Value</p>\r\n                <p className='w-[15%] text-left'>Token</p>\r\n              </div>\r\n              <div className='w-full h-[calc(100vh-21rem)] carousel mt-[1rem] text-gray-100 text-xl'>\r\n                {loading ? <div className=\"w-full text-center\">Loading...</div> : transaction.length > 0 ? <div className='w-full h-[calc(100vh-17em)] overflow-y-auto'>\r\n                  {\r\n                    transaction.map((t, index) => {\r\n                      return (\r\n                        <div key={index} className='w-full flex text-gray-100 leading-[1.4rem] bg-[#333333] border-b border-[#282828]'>\r\n                          <p className='w-[15%] text-left'>{t.blockHash.substr(0, 8) + \"...\"}</p>\r\n                          <p className='w-[12%] text-left'>{t.functionName}</p>\r\n                          <p className='w-[15%] text-left'>{t.timeStamp}</p>\r\n                          <p className='w-[15%] text-left'>{t.from.substr(0, 8) + \"...\"}</p>\r\n                          <p className='w-[18%] text-left'>{t.to.substr(0, 8) + \"...\"}</p>\r\n                          <p className='w-[10%] text-left'>{(t.value / 10**18).toFixed(8)}</p>\r\n                          <p className='w-[15%] text-left'>Token</p>\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </div> : <div className=\"w-full text-center\">Empty Data</div>}\r\n              </div>\r\n            </div>\r\n            {(seluser && seluser.role === 'merchant') && <Sidebar />}\r\n        </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Wallet;"],"names":["useNavigate","dispatch","useDispatch","successed","useSelector","selectRegisterSuccess","appear","show","as","Fragment","onClose","className","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","src","alt","onClick","registerSuccess","userRole","selectUserRole","searchBar","homeBtn","walletNav","faqBtn","navigate","seluser","selectUser","adminFee","selectFee","adminData","selectAdminData","useState","fee","setFee","walletAddress","setWalletAddress","walletBalance","setWalletBalance","transaction","setTransaction","loading","setLoading","loadingBalance","setLoadingBalance","type","setType","getWalletBalance","addr","web3Service","ret","balance","data","getTransactions","res","useEffect","is_admin","walpublic","btcwalpublic","adr","substr","length","getWalletAddress","getFee","classes","icon","faHome","onChange","e","parseInt","target","value","COIN_TYPES","max","min","parseFloat","updateFeeData","navigator","clipboard","writeText","openSnackBar","message","status","map","t","index","blockHash","functionName","timeStamp","from","to","toFixed","role"],"sourceRoot":""}